ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"aes.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.KeyExpansion,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	KeyExpansion:
  26              	.LVL0:
  27              	.LFB0:
  28              		.file 1 "Src/aes.c"
   1:Src/aes.c     **** /*
   2:Src/aes.c     **** 
   3:Src/aes.c     **** This is an implementation of the AES algorithm, specifically ECB, CTR and CBC mode.
   4:Src/aes.c     **** Block size can be chosen in aes.h - available choices are AES128, AES192, AES256.
   5:Src/aes.c     **** 
   6:Src/aes.c     **** The implementation is verified against the test vectors in:
   7:Src/aes.c     ****   National Institute of Standards and Technology Special Publication 800-38A 2001 ED
   8:Src/aes.c     **** 
   9:Src/aes.c     **** ECB-AES128
  10:Src/aes.c     **** ----------
  11:Src/aes.c     **** 
  12:Src/aes.c     ****   plain-text:
  13:Src/aes.c     ****     6bc1bee22e409f96e93d7e117393172a
  14:Src/aes.c     ****     ae2d8a571e03ac9c9eb76fac45af8e51
  15:Src/aes.c     ****     30c81c46a35ce411e5fbc1191a0a52ef
  16:Src/aes.c     ****     f69f2445df4f9b17ad2b417be66c3710
  17:Src/aes.c     **** 
  18:Src/aes.c     ****   key:
  19:Src/aes.c     ****     2b7e151628aed2a6abf7158809cf4f3c
  20:Src/aes.c     **** 
  21:Src/aes.c     ****   resulting cipher
  22:Src/aes.c     ****     3ad77bb40d7a3660a89ecaf32466ef97 
  23:Src/aes.c     ****     f5d3d58503b9699de785895a96fdbaaf 
  24:Src/aes.c     ****     43b1cd7f598ece23881b00e3ed030688 
  25:Src/aes.c     ****     7b0c785e27e8ad3f8223207104725dd4 
  26:Src/aes.c     **** 
  27:Src/aes.c     **** 
  28:Src/aes.c     **** NOTE:   String length must be evenly divisible by 16byte (str_len % 16 == 0)
  29:Src/aes.c     ****         You should pad the end of the string with zeros if this is not the case.
  30:Src/aes.c     ****         For AES192/256 the key size is proportionally larger.
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 2


  31:Src/aes.c     **** 
  32:Src/aes.c     **** */
  33:Src/aes.c     **** 
  34:Src/aes.c     **** 
  35:Src/aes.c     **** /*****************************************************************************/
  36:Src/aes.c     **** /* Includes:                                                                 */
  37:Src/aes.c     **** /*****************************************************************************/
  38:Src/aes.c     **** #include <string.h> // CBC mode, for memset
  39:Src/aes.c     **** #include "aes.h"
  40:Src/aes.c     **** 
  41:Src/aes.c     **** struct AES_ctx aes_test;
  42:Src/aes.c     **** /*****************************************************************************/
  43:Src/aes.c     **** /* Defines:                                                                  */
  44:Src/aes.c     **** /*****************************************************************************/
  45:Src/aes.c     **** // The number of columns comprising a state in AES. This is a constant in AES. Value=4
  46:Src/aes.c     **** #define Nb 4
  47:Src/aes.c     **** 
  48:Src/aes.c     **** #if defined(AES256) && (AES256 == 1)
  49:Src/aes.c     ****     #define Nk 8
  50:Src/aes.c     ****     #define Nr 14
  51:Src/aes.c     **** #elif defined(AES192) && (AES192 == 1)
  52:Src/aes.c     ****     #define Nk 6
  53:Src/aes.c     ****     #define Nr 12
  54:Src/aes.c     **** #else
  55:Src/aes.c     ****     #define Nk 4        // The number of 32 bit words in a key.
  56:Src/aes.c     ****     #define Nr 10       // The number of rounds in AES Cipher.
  57:Src/aes.c     **** #endif
  58:Src/aes.c     **** 
  59:Src/aes.c     **** // jcallan@github points out that declaring Multiply as a function 
  60:Src/aes.c     **** // reduces code size considerably with the Keil ARM compiler.
  61:Src/aes.c     **** // See this link for more information: https://github.com/kokke/tiny-AES-C/pull/3
  62:Src/aes.c     **** #ifndef MULTIPLY_AS_A_FUNCTION
  63:Src/aes.c     ****   #define MULTIPLY_AS_A_FUNCTION 0
  64:Src/aes.c     **** #endif
  65:Src/aes.c     **** 
  66:Src/aes.c     **** 
  67:Src/aes.c     **** 
  68:Src/aes.c     **** 
  69:Src/aes.c     **** /*****************************************************************************/
  70:Src/aes.c     **** /* Private variables:                                                        */
  71:Src/aes.c     **** /*****************************************************************************/
  72:Src/aes.c     **** // state - array holding the intermediate results during decryption.
  73:Src/aes.c     **** typedef uint8_t state_t[4][4];
  74:Src/aes.c     **** 
  75:Src/aes.c     **** 
  76:Src/aes.c     **** 
  77:Src/aes.c     **** // The lookup-tables are marked const so they can be placed in read-only storage instead of RAM
  78:Src/aes.c     **** // The numbers below can be computed dynamically trading ROM for RAM - 
  79:Src/aes.c     **** // This can be useful in (embedded) bootloader applications, where ROM is often limited.
  80:Src/aes.c     **** static const uint8_t sbox[256] = {
  81:Src/aes.c     ****   //0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
  82:Src/aes.c     ****   0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  83:Src/aes.c     ****   0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
  84:Src/aes.c     ****   0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
  85:Src/aes.c     ****   0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
  86:Src/aes.c     ****   0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
  87:Src/aes.c     ****   0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 3


  88:Src/aes.c     ****   0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
  89:Src/aes.c     ****   0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
  90:Src/aes.c     ****   0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
  91:Src/aes.c     ****   0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
  92:Src/aes.c     ****   0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
  93:Src/aes.c     ****   0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
  94:Src/aes.c     ****   0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
  95:Src/aes.c     ****   0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
  96:Src/aes.c     ****   0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
  97:Src/aes.c     ****   0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 };
  98:Src/aes.c     **** 
  99:Src/aes.c     **** static const uint8_t rsbox[256] = {
 100:Src/aes.c     ****   0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
 101:Src/aes.c     ****   0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
 102:Src/aes.c     ****   0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
 103:Src/aes.c     ****   0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
 104:Src/aes.c     ****   0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
 105:Src/aes.c     ****   0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
 106:Src/aes.c     ****   0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
 107:Src/aes.c     ****   0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
 108:Src/aes.c     ****   0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
 109:Src/aes.c     ****   0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
 110:Src/aes.c     ****   0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
 111:Src/aes.c     ****   0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
 112:Src/aes.c     ****   0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
 113:Src/aes.c     ****   0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
 114:Src/aes.c     ****   0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
 115:Src/aes.c     ****   0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d };
 116:Src/aes.c     **** 
 117:Src/aes.c     **** // The round constant word array, Rcon[i], contains the values given by 
 118:Src/aes.c     **** // x to the power (i-1) being powers of x (x is denoted as {02}) in the field GF(2^8)
 119:Src/aes.c     **** static const uint8_t Rcon[11] = {
 120:Src/aes.c     ****   0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36 };
 121:Src/aes.c     **** 
 122:Src/aes.c     **** /*
 123:Src/aes.c     ****  * Jordan Goulder points out in PR #12 (https://github.com/kokke/tiny-AES-C/pull/12),
 124:Src/aes.c     ****  * that you can remove most of the elements in the Rcon array, because they are unused.
 125:Src/aes.c     ****  *
 126:Src/aes.c     ****  * From Wikipedia's article on the Rijndael key schedule @ https://en.wikipedia.org/wiki/Rijndael_k
 127:Src/aes.c     ****  * 
 128:Src/aes.c     ****  * "Only the first some of these constants are actually used – up to rcon[10] for AES-128 (as 11 
 129:Src/aes.c     ****  *  up to rcon[8] for AES-192, up to rcon[7] for AES-256. rcon[0] is not used in AES algorithm."
 130:Src/aes.c     ****  */
 131:Src/aes.c     **** 
 132:Src/aes.c     **** 
 133:Src/aes.c     **** /*****************************************************************************/
 134:Src/aes.c     **** /* Private functions:                                                        */
 135:Src/aes.c     **** /*****************************************************************************/
 136:Src/aes.c     **** /*
 137:Src/aes.c     **** static uint8_t getSBoxValue(uint8_t num)
 138:Src/aes.c     **** {
 139:Src/aes.c     ****   return sbox[num];
 140:Src/aes.c     **** }
 141:Src/aes.c     **** */
 142:Src/aes.c     **** #define getSBoxValue(num) (sbox[(num)])
 143:Src/aes.c     **** /*
 144:Src/aes.c     **** static uint8_t getSBoxInvert(uint8_t num)
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 4


 145:Src/aes.c     **** {
 146:Src/aes.c     ****   return rsbox[num];
 147:Src/aes.c     **** }
 148:Src/aes.c     **** */
 149:Src/aes.c     **** #define getSBoxInvert(num) (rsbox[(num)])
 150:Src/aes.c     **** 
 151:Src/aes.c     **** // This function produces Nb(Nr+1) round keys. The round keys are used in each round to decrypt the
 152:Src/aes.c     **** static void KeyExpansion(uint8_t* RoundKey, const uint8_t* Key)
 153:Src/aes.c     **** {
  29              		.loc 1 153 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 153 1 is_stmt 0 view .LVU1
  35 0000 70B4     		push	{r4, r5, r6}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 6, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 24
 154:Src/aes.c     ****   unsigned i, j, k;
  44              		.loc 1 154 3 is_stmt 1 view .LVU2
 155:Src/aes.c     ****   uint8_t tempa[4]; // Used for the column/row operations
  45              		.loc 1 155 3 view .LVU3
 156:Src/aes.c     ****   
 157:Src/aes.c     ****   // The first round key is the key itself.
 158:Src/aes.c     ****   for (i = 0; i < Nk; ++i)
  46              		.loc 1 158 3 view .LVU4
  47              	.LVL1:
  48              		.loc 1 158 10 is_stmt 0 view .LVU5
  49 0004 0022     		movs	r2, #0
  50              		.loc 1 158 3 view .LVU6
  51 0006 0EE0     		b	.L2
  52              	.LVL2:
  53              	.L3:
 159:Src/aes.c     ****   {
 160:Src/aes.c     ****     RoundKey[(i * 4) + 0] = Key[(i * 4) + 0];
  54              		.loc 1 160 5 is_stmt 1 discriminator 3 view .LVU7
  55              		.loc 1 160 36 is_stmt 0 discriminator 3 view .LVU8
  56 0008 9300     		lsls	r3, r2, #2
  57              		.loc 1 160 32 discriminator 3 view .LVU9
  58 000a 11F82240 		ldrb	r4, [r1, r2, lsl #2]	@ zero_extendqisi2
  59              		.loc 1 160 27 discriminator 3 view .LVU10
  60 000e 00F82240 		strb	r4, [r0, r2, lsl #2]
 161:Src/aes.c     ****     RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];
  61              		.loc 1 161 5 is_stmt 1 discriminator 3 view .LVU11
  62              		.loc 1 161 32 is_stmt 0 discriminator 3 view .LVU12
  63 0012 5C1C     		adds	r4, r3, #1
  64 0014 0D5D     		ldrb	r5, [r1, r4]	@ zero_extendqisi2
  65              		.loc 1 161 27 discriminator 3 view .LVU13
  66 0016 0555     		strb	r5, [r0, r4]
 162:Src/aes.c     ****     RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];
  67              		.loc 1 162 5 is_stmt 1 discriminator 3 view .LVU14
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 5


  68              		.loc 1 162 32 is_stmt 0 discriminator 3 view .LVU15
  69 0018 9C1C     		adds	r4, r3, #2
  70 001a 0D5D     		ldrb	r5, [r1, r4]	@ zero_extendqisi2
  71              		.loc 1 162 27 discriminator 3 view .LVU16
  72 001c 0555     		strb	r5, [r0, r4]
 163:Src/aes.c     ****     RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];
  73              		.loc 1 163 5 is_stmt 1 discriminator 3 view .LVU17
  74              		.loc 1 163 32 is_stmt 0 discriminator 3 view .LVU18
  75 001e 0333     		adds	r3, r3, #3
  76 0020 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
  77              		.loc 1 163 27 discriminator 3 view .LVU19
  78 0022 C454     		strb	r4, [r0, r3]
 158:Src/aes.c     ****   {
  79              		.loc 1 158 23 is_stmt 1 discriminator 3 view .LVU20
  80 0024 0132     		adds	r2, r2, #1
  81              	.LVL3:
  82              	.L2:
 158:Src/aes.c     ****   {
  83              		.loc 1 158 15 discriminator 1 view .LVU21
 158:Src/aes.c     ****   {
  84              		.loc 1 158 3 is_stmt 0 discriminator 1 view .LVU22
  85 0026 032A     		cmp	r2, #3
  86 0028 EED9     		bls	.L3
 164:Src/aes.c     ****   }
 165:Src/aes.c     **** 
 166:Src/aes.c     ****   // All other round keys are found from the previous round keys.
 167:Src/aes.c     ****   for (i = Nk; i < Nb * (Nr + 1); ++i)
  87              		.loc 1 167 10 view .LVU23
  88 002a 0423     		movs	r3, #4
  89 002c 1DE0     		b	.L4
  90              	.LVL4:
  91              	.L5:
 168:Src/aes.c     ****   {
 169:Src/aes.c     ****     {
 170:Src/aes.c     ****       k = (i - 1) * 4;
 171:Src/aes.c     ****       tempa[0]=RoundKey[k + 0];
 172:Src/aes.c     ****       tempa[1]=RoundKey[k + 1];
 173:Src/aes.c     ****       tempa[2]=RoundKey[k + 2];
 174:Src/aes.c     ****       tempa[3]=RoundKey[k + 3];
 175:Src/aes.c     **** 
 176:Src/aes.c     ****     }
 177:Src/aes.c     **** 
 178:Src/aes.c     ****     if (i % Nk == 0)
 179:Src/aes.c     ****     {
 180:Src/aes.c     ****       // This function shifts the 4 bytes in a word to the left once.
 181:Src/aes.c     ****       // [a0,a1,a2,a3] becomes [a1,a2,a3,a0]
 182:Src/aes.c     **** 
 183:Src/aes.c     ****       // Function RotWord()
 184:Src/aes.c     ****       {
 185:Src/aes.c     ****         const uint8_t u8tmp = tempa[0];
 186:Src/aes.c     ****         tempa[0] = tempa[1];
 187:Src/aes.c     ****         tempa[1] = tempa[2];
 188:Src/aes.c     ****         tempa[2] = tempa[3];
 189:Src/aes.c     ****         tempa[3] = u8tmp;
 190:Src/aes.c     ****       }
 191:Src/aes.c     **** 
 192:Src/aes.c     ****       // SubWord() is a function that takes a four-byte input word and 
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 6


 193:Src/aes.c     ****       // applies the S-box to each of the four bytes to produce an output word.
 194:Src/aes.c     **** 
 195:Src/aes.c     ****       // Function Subword()
 196:Src/aes.c     ****       {
 197:Src/aes.c     ****         tempa[0] = getSBoxValue(tempa[0]);
 198:Src/aes.c     ****         tempa[1] = getSBoxValue(tempa[1]);
 199:Src/aes.c     ****         tempa[2] = getSBoxValue(tempa[2]);
 200:Src/aes.c     ****         tempa[3] = getSBoxValue(tempa[3]);
 201:Src/aes.c     ****       }
 202:Src/aes.c     **** 
 203:Src/aes.c     ****       tempa[0] = tempa[0] ^ Rcon[i/Nk];
 204:Src/aes.c     ****     }
 205:Src/aes.c     **** #if defined(AES256) && (AES256 == 1)
 206:Src/aes.c     ****     if (i % Nk == 4)
 207:Src/aes.c     ****     {
 208:Src/aes.c     ****       // Function Subword()
 209:Src/aes.c     ****       {
 210:Src/aes.c     ****         tempa[0] = getSBoxValue(tempa[0]);
 211:Src/aes.c     ****         tempa[1] = getSBoxValue(tempa[1]);
 212:Src/aes.c     ****         tempa[2] = getSBoxValue(tempa[2]);
 213:Src/aes.c     ****         tempa[3] = getSBoxValue(tempa[3]);
 214:Src/aes.c     ****       }
 215:Src/aes.c     ****     }
 216:Src/aes.c     **** #endif
 217:Src/aes.c     ****     j = i * 4; k=(i - Nk) * 4;
  92              		.loc 1 217 5 is_stmt 1 discriminator 2 view .LVU24
  93              		.loc 1 217 7 is_stmt 0 discriminator 2 view .LVU25
  94 002e 9900     		lsls	r1, r3, #2
  95              	.LVL5:
  96              		.loc 1 217 16 is_stmt 1 discriminator 2 view .LVU26
  97              		.loc 1 217 21 is_stmt 0 discriminator 2 view .LVU27
  98 0030 1A1F     		subs	r2, r3, #4
  99              	.LVL6:
 218:Src/aes.c     ****     RoundKey[j + 0] = RoundKey[k + 0] ^ tempa[0];
 100              		.loc 1 218 5 is_stmt 1 discriminator 2 view .LVU28
 101              		.loc 1 218 31 is_stmt 0 discriminator 2 view .LVU29
 102 0032 10F82240 		ldrb	r4, [r0, r2, lsl #2]	@ zero_extendqisi2
 103              		.loc 1 218 46 discriminator 2 view .LVU30
 104 0036 9DF80450 		ldrb	r5, [sp, #4]	@ zero_extendqisi2
 105              		.loc 1 218 21 discriminator 2 view .LVU31
 106 003a 6C40     		eors	r4, r4, r5
 107 003c 00F82340 		strb	r4, [r0, r3, lsl #2]
 219:Src/aes.c     ****     RoundKey[j + 1] = RoundKey[k + 1] ^ tempa[1];
 108              		.loc 1 219 5 is_stmt 1 discriminator 2 view .LVU32
 109              		.loc 1 219 31 is_stmt 0 discriminator 2 view .LVU33
 110 0040 00EB8202 		add	r2, r0, r2, lsl #2
 111              	.LVL7:
 112              		.loc 1 219 31 discriminator 2 view .LVU34
 113 0044 5478     		ldrb	r4, [r2, #1]	@ zero_extendqisi2
 114              		.loc 1 219 46 discriminator 2 view .LVU35
 115 0046 9DF80560 		ldrb	r6, [sp, #5]	@ zero_extendqisi2
 116              		.loc 1 219 13 discriminator 2 view .LVU36
 117 004a 4D1C     		adds	r5, r1, #1
 118              		.loc 1 219 21 discriminator 2 view .LVU37
 119 004c 7440     		eors	r4, r4, r6
 120 004e 4455     		strb	r4, [r0, r5]
 220:Src/aes.c     ****     RoundKey[j + 2] = RoundKey[k + 2] ^ tempa[2];
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 7


 121              		.loc 1 220 5 is_stmt 1 discriminator 2 view .LVU38
 122              		.loc 1 220 31 is_stmt 0 discriminator 2 view .LVU39
 123 0050 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 124              		.loc 1 220 46 discriminator 2 view .LVU40
 125 0052 9DF80660 		ldrb	r6, [sp, #6]	@ zero_extendqisi2
 126              		.loc 1 220 13 discriminator 2 view .LVU41
 127 0056 8D1C     		adds	r5, r1, #2
 128              		.loc 1 220 21 discriminator 2 view .LVU42
 129 0058 7440     		eors	r4, r4, r6
 130 005a 4455     		strb	r4, [r0, r5]
 221:Src/aes.c     ****     RoundKey[j + 3] = RoundKey[k + 3] ^ tempa[3];
 131              		.loc 1 221 5 is_stmt 1 discriminator 2 view .LVU43
 132              		.loc 1 221 31 is_stmt 0 discriminator 2 view .LVU44
 133 005c D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 134              		.loc 1 221 46 discriminator 2 view .LVU45
 135 005e 9DF80740 		ldrb	r4, [sp, #7]	@ zero_extendqisi2
 136              		.loc 1 221 13 discriminator 2 view .LVU46
 137 0062 0331     		adds	r1, r1, #3
 138              	.LVL8:
 139              		.loc 1 221 21 discriminator 2 view .LVU47
 140 0064 6240     		eors	r2, r2, r4
 141 0066 4254     		strb	r2, [r0, r1]
 167:Src/aes.c     ****   {
 142              		.loc 1 167 35 is_stmt 1 discriminator 2 view .LVU48
 143 0068 0133     		adds	r3, r3, #1
 144              	.LVL9:
 145              	.L4:
 167:Src/aes.c     ****   {
 146              		.loc 1 167 16 discriminator 1 view .LVU49
 167:Src/aes.c     ****   {
 147              		.loc 1 167 3 is_stmt 0 discriminator 1 view .LVU50
 148 006a 2B2B     		cmp	r3, #43
 149 006c 24D8     		bhi	.L8
 170:Src/aes.c     ****       tempa[0]=RoundKey[k + 0];
 150              		.loc 1 170 7 is_stmt 1 view .LVU51
 170:Src/aes.c     ****       tempa[0]=RoundKey[k + 0];
 151              		.loc 1 170 14 is_stmt 0 view .LVU52
 152 006e 5A1E     		subs	r2, r3, #1
 153              	.LVL10:
 171:Src/aes.c     ****       tempa[1]=RoundKey[k + 1];
 154              		.loc 1 171 7 is_stmt 1 view .LVU53
 171:Src/aes.c     ****       tempa[1]=RoundKey[k + 1];
 155              		.loc 1 171 24 is_stmt 0 view .LVU54
 156 0070 10F82210 		ldrb	r1, [r0, r2, lsl #2]	@ zero_extendqisi2
 171:Src/aes.c     ****       tempa[1]=RoundKey[k + 1];
 157              		.loc 1 171 15 view .LVU55
 158 0074 8DF80410 		strb	r1, [sp, #4]
 172:Src/aes.c     ****       tempa[2]=RoundKey[k + 2];
 159              		.loc 1 172 7 is_stmt 1 view .LVU56
 172:Src/aes.c     ****       tempa[2]=RoundKey[k + 2];
 160              		.loc 1 172 24 is_stmt 0 view .LVU57
 161 0078 00EB8202 		add	r2, r0, r2, lsl #2
 162              	.LVL11:
 172:Src/aes.c     ****       tempa[2]=RoundKey[k + 2];
 163              		.loc 1 172 24 view .LVU58
 164 007c 5578     		ldrb	r5, [r2, #1]	@ zero_extendqisi2
 172:Src/aes.c     ****       tempa[2]=RoundKey[k + 2];
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 8


 165              		.loc 1 172 15 view .LVU59
 166 007e 8DF80550 		strb	r5, [sp, #5]
 173:Src/aes.c     ****       tempa[3]=RoundKey[k + 3];
 167              		.loc 1 173 7 is_stmt 1 view .LVU60
 173:Src/aes.c     ****       tempa[3]=RoundKey[k + 3];
 168              		.loc 1 173 24 is_stmt 0 view .LVU61
 169 0082 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 173:Src/aes.c     ****       tempa[3]=RoundKey[k + 3];
 170              		.loc 1 173 15 view .LVU62
 171 0084 8DF80640 		strb	r4, [sp, #6]
 174:Src/aes.c     **** 
 172              		.loc 1 174 7 is_stmt 1 view .LVU63
 174:Src/aes.c     **** 
 173              		.loc 1 174 24 is_stmt 0 view .LVU64
 174 0088 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 174:Src/aes.c     **** 
 175              		.loc 1 174 15 view .LVU65
 176 008a 8DF80720 		strb	r2, [sp, #7]
 178:Src/aes.c     ****     {
 177              		.loc 1 178 5 is_stmt 1 view .LVU66
 178:Src/aes.c     ****     {
 178              		.loc 1 178 8 is_stmt 0 view .LVU67
 179 008e 13F0030F 		tst	r3, #3
 180 0092 CCD1     		bne	.L5
 185:Src/aes.c     ****         tempa[0] = tempa[1];
 181              		.loc 1 185 9 is_stmt 1 view .LVU68
 182              	.LVL12:
 186:Src/aes.c     ****         tempa[1] = tempa[2];
 183              		.loc 1 186 9 view .LVU69
 187:Src/aes.c     ****         tempa[2] = tempa[3];
 184              		.loc 1 187 9 view .LVU70
 188:Src/aes.c     ****         tempa[3] = u8tmp;
 185              		.loc 1 188 9 view .LVU71
 189:Src/aes.c     ****       }
 186              		.loc 1 189 9 view .LVU72
 197:Src/aes.c     ****         tempa[1] = getSBoxValue(tempa[1]);
 187              		.loc 1 197 9 view .LVU73
 197:Src/aes.c     ****         tempa[1] = getSBoxValue(tempa[1]);
 188              		.loc 1 197 20 is_stmt 0 view .LVU74
 189 0094 0A4E     		ldr	r6, .L9
 190 0096 755D     		ldrb	r5, [r6, r5]	@ zero_extendqisi2
 198:Src/aes.c     ****         tempa[2] = getSBoxValue(tempa[2]);
 191              		.loc 1 198 9 is_stmt 1 view .LVU75
 198:Src/aes.c     ****         tempa[2] = getSBoxValue(tempa[2]);
 192              		.loc 1 198 20 is_stmt 0 view .LVU76
 193 0098 345D     		ldrb	r4, [r6, r4]	@ zero_extendqisi2
 198:Src/aes.c     ****         tempa[2] = getSBoxValue(tempa[2]);
 194              		.loc 1 198 18 view .LVU77
 195 009a 8DF80540 		strb	r4, [sp, #5]
 199:Src/aes.c     ****         tempa[3] = getSBoxValue(tempa[3]);
 196              		.loc 1 199 9 is_stmt 1 view .LVU78
 199:Src/aes.c     ****         tempa[3] = getSBoxValue(tempa[3]);
 197              		.loc 1 199 20 is_stmt 0 view .LVU79
 198 009e B25C     		ldrb	r2, [r6, r2]	@ zero_extendqisi2
 199:Src/aes.c     ****         tempa[3] = getSBoxValue(tempa[3]);
 199              		.loc 1 199 18 view .LVU80
 200 00a0 8DF80620 		strb	r2, [sp, #6]
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 9


 200:Src/aes.c     ****       }
 201              		.loc 1 200 9 is_stmt 1 view .LVU81
 200:Src/aes.c     ****       }
 202              		.loc 1 200 20 is_stmt 0 view .LVU82
 203 00a4 725C     		ldrb	r2, [r6, r1]	@ zero_extendqisi2
 200:Src/aes.c     ****       }
 204              		.loc 1 200 18 view .LVU83
 205 00a6 8DF80720 		strb	r2, [sp, #7]
 203:Src/aes.c     ****     }
 206              		.loc 1 203 7 is_stmt 1 view .LVU84
 203:Src/aes.c     ****     }
 207              		.loc 1 203 35 is_stmt 0 view .LVU85
 208 00aa 9A08     		lsrs	r2, r3, #2
 203:Src/aes.c     ****     }
 209              		.loc 1 203 33 view .LVU86
 210 00ac 0549     		ldr	r1, .L9+4
 211              	.LVL13:
 203:Src/aes.c     ****     }
 212              		.loc 1 203 33 view .LVU87
 213 00ae 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 203:Src/aes.c     ****     }
 214              		.loc 1 203 16 view .LVU88
 215 00b0 6A40     		eors	r2, r2, r5
 216 00b2 8DF80420 		strb	r2, [sp, #4]
 217              	.LVL14:
 203:Src/aes.c     ****     }
 218              		.loc 1 203 16 view .LVU89
 219 00b6 BAE7     		b	.L5
 220              	.LVL15:
 221              	.L8:
 222:Src/aes.c     ****   }
 223:Src/aes.c     **** }
 222              		.loc 1 223 1 view .LVU90
 223 00b8 03B0     		add	sp, sp, #12
 224              	.LCFI2:
 225              		.cfi_def_cfa_offset 12
 226              		@ sp needed
 227 00ba 70BC     		pop	{r4, r5, r6}
 228              	.LCFI3:
 229              		.cfi_restore 6
 230              		.cfi_restore 5
 231              		.cfi_restore 4
 232              		.cfi_def_cfa_offset 0
 233 00bc 7047     		bx	lr
 234              	.L10:
 235 00be 00BF     		.align	2
 236              	.L9:
 237 00c0 00000000 		.word	.LANCHOR0
 238 00c4 00000000 		.word	.LANCHOR1
 239              		.cfi_endproc
 240              	.LFE0:
 242              		.section	.text.AddRoundKey,"ax",%progbits
 243              		.align	1
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 10


 249              	AddRoundKey:
 250              	.LVL16:
 251              	.LFB4:
 224:Src/aes.c     **** 
 225:Src/aes.c     **** void AES_init_ctx(struct AES_ctx* ctx, const uint8_t* key)
 226:Src/aes.c     **** {
 227:Src/aes.c     ****   KeyExpansion(ctx->RoundKey, key);
 228:Src/aes.c     **** }
 229:Src/aes.c     **** #if (defined(CBC) && (CBC == 1)) || (defined(CTR) && (CTR == 1))
 230:Src/aes.c     **** void AES_init_ctx_iv(struct AES_ctx* ctx, const uint8_t* key, const uint8_t* iv)
 231:Src/aes.c     **** {
 232:Src/aes.c     ****   KeyExpansion(ctx->RoundKey, key);
 233:Src/aes.c     ****   memcpy (ctx->Iv, iv, AES_BLOCKLEN);
 234:Src/aes.c     **** }
 235:Src/aes.c     **** void AES_ctx_set_iv(struct AES_ctx* ctx, const uint8_t* iv)
 236:Src/aes.c     **** {
 237:Src/aes.c     ****   memcpy (ctx->Iv, iv, AES_BLOCKLEN);
 238:Src/aes.c     **** }
 239:Src/aes.c     **** #endif
 240:Src/aes.c     **** 
 241:Src/aes.c     **** // This function adds the round key to state.
 242:Src/aes.c     **** // The round key is added to the state by an XOR function.
 243:Src/aes.c     **** static void AddRoundKey(uint8_t round, state_t* state, const uint8_t* RoundKey)
 244:Src/aes.c     **** {
 252              		.loc 1 244 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              		.loc 1 244 1 is_stmt 0 view .LVU92
 258 0000 F0B4     		push	{r4, r5, r6, r7}
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 16
 261              		.cfi_offset 4, -16
 262              		.cfi_offset 5, -12
 263              		.cfi_offset 6, -8
 264              		.cfi_offset 7, -4
 245:Src/aes.c     ****   uint8_t i,j;
 265              		.loc 1 245 3 is_stmt 1 view .LVU93
 246:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 266              		.loc 1 246 3 view .LVU94
 267              	.LVL17:
 268              		.loc 1 246 10 is_stmt 0 view .LVU95
 269 0002 0025     		movs	r5, #0
 270              		.loc 1 246 3 view .LVU96
 271 0004 0FE0     		b	.L12
 272              	.LVL18:
 273              	.L13:
 247:Src/aes.c     ****   {
 248:Src/aes.c     ****     for (j = 0; j < 4; ++j)
 249:Src/aes.c     ****     {
 250:Src/aes.c     ****       (*state)[i][j] ^= RoundKey[(round * Nb * 4) + (i * Nb) + j];
 274              		.loc 1 250 7 is_stmt 1 discriminator 3 view .LVU97
 275              		.loc 1 250 51 is_stmt 0 discriminator 3 view .LVU98
 276 0006 05EB8004 		add	r4, r5, r0, lsl #2
 277              		.loc 1 250 62 discriminator 3 view .LVU99
 278 000a 03EB8404 		add	r4, r3, r4, lsl #2
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 11


 279              		.loc 1 250 33 discriminator 3 view .LVU100
 280 000e 145D     		ldrb	r4, [r2, r4]	@ zero_extendqisi2
 281              		.loc 1 250 22 discriminator 3 view .LVU101
 282 0010 01EB8506 		add	r6, r1, r5, lsl #2
 283 0014 F75C     		ldrb	r7, [r6, r3]	@ zero_extendqisi2
 284 0016 7C40     		eors	r4, r4, r7
 285 0018 F454     		strb	r4, [r6, r3]
 248:Src/aes.c     ****     {
 286              		.loc 1 248 24 is_stmt 1 discriminator 3 view .LVU102
 287 001a 0133     		adds	r3, r3, #1
 288              	.LVL19:
 248:Src/aes.c     ****     {
 289              		.loc 1 248 24 is_stmt 0 discriminator 3 view .LVU103
 290 001c DBB2     		uxtb	r3, r3
 291              	.LVL20:
 292              	.L14:
 248:Src/aes.c     ****     {
 293              		.loc 1 248 17 is_stmt 1 discriminator 1 view .LVU104
 248:Src/aes.c     ****     {
 294              		.loc 1 248 5 is_stmt 0 discriminator 1 view .LVU105
 295 001e 032B     		cmp	r3, #3
 296 0020 F1D9     		bls	.L13
 246:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 297              		.loc 1 246 22 is_stmt 1 discriminator 2 view .LVU106
 298 0022 0135     		adds	r5, r5, #1
 299              	.LVL21:
 246:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 300              		.loc 1 246 22 is_stmt 0 discriminator 2 view .LVU107
 301 0024 EDB2     		uxtb	r5, r5
 302              	.LVL22:
 303              	.L12:
 246:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 304              		.loc 1 246 15 is_stmt 1 discriminator 1 view .LVU108
 246:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 305              		.loc 1 246 3 is_stmt 0 discriminator 1 view .LVU109
 306 0026 032D     		cmp	r5, #3
 307 0028 01D8     		bhi	.L17
 248:Src/aes.c     ****     {
 308              		.loc 1 248 12 view .LVU110
 309 002a 0023     		movs	r3, #0
 310 002c F7E7     		b	.L14
 311              	.L17:
 251:Src/aes.c     ****     }
 252:Src/aes.c     ****   }
 253:Src/aes.c     **** }
 312              		.loc 1 253 1 view .LVU111
 313 002e F0BC     		pop	{r4, r5, r6, r7}
 314              	.LCFI5:
 315              		.cfi_restore 7
 316              		.cfi_restore 6
 317              		.cfi_restore 5
 318              		.cfi_restore 4
 319              		.cfi_def_cfa_offset 0
 320              	.LVL23:
 321              		.loc 1 253 1 view .LVU112
 322 0030 7047     		bx	lr
 323              		.cfi_endproc
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 12


 324              	.LFE4:
 326              		.section	.text.SubBytes,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
 333              	SubBytes:
 334              	.LVL24:
 335              	.LFB5:
 254:Src/aes.c     **** 
 255:Src/aes.c     **** // The SubBytes Function Substitutes the values in the
 256:Src/aes.c     **** // state matrix with values in an S-box.
 257:Src/aes.c     **** static void SubBytes(state_t* state)
 258:Src/aes.c     **** {
 336              		.loc 1 258 1 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 259:Src/aes.c     ****   uint8_t i, j;
 341              		.loc 1 259 3 view .LVU114
 260:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 342              		.loc 1 260 3 view .LVU115
 343              		.loc 1 260 10 is_stmt 0 view .LVU116
 344 0000 0022     		movs	r2, #0
 345              	.LVL25:
 346              	.L24:
 347              		.loc 1 260 15 is_stmt 1 view .LVU117
 348              		.loc 1 260 3 is_stmt 0 view .LVU118
 349 0002 032A     		cmp	r2, #3
 350 0004 18D8     		bhi	.L29
 261:Src/aes.c     ****   {
 262:Src/aes.c     ****     for (j = 0; j < 4; ++j)
 351              		.loc 1 262 12 view .LVU119
 352 0006 0023     		movs	r3, #0
 353              	.LVL26:
 354              		.loc 1 262 17 is_stmt 1 view .LVU120
 355              		.loc 1 262 5 is_stmt 0 view .LVU121
 356 0008 032B     		cmp	r3, #3
 357 000a 12D8     		bhi	.L30
 258:Src/aes.c     ****   uint8_t i, j;
 358              		.loc 1 258 1 view .LVU122
 359 000c 30B4     		push	{r4, r5}
 360              	.LCFI6:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 5, -4
 364              	.L20:
 263:Src/aes.c     ****     {
 264:Src/aes.c     ****       (*state)[j][i] = getSBoxValue((*state)[j][i]);
 365              		.loc 1 264 7 is_stmt 1 discriminator 3 view .LVU123
 366              		.loc 1 264 24 is_stmt 0 discriminator 3 view .LVU124
 367 000e 00EB8301 		add	r1, r0, r3, lsl #2
 368 0012 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 369 0014 094D     		ldr	r5, .L32
 370 0016 2C5D     		ldrb	r4, [r5, r4]	@ zero_extendqisi2
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 13


 371              		.loc 1 264 22 discriminator 3 view .LVU125
 372 0018 8C54     		strb	r4, [r1, r2]
 262:Src/aes.c     ****     {
 373              		.loc 1 262 24 is_stmt 1 discriminator 3 view .LVU126
 374 001a 0133     		adds	r3, r3, #1
 375              	.LVL27:
 262:Src/aes.c     ****     {
 376              		.loc 1 262 24 is_stmt 0 discriminator 3 view .LVU127
 377 001c DBB2     		uxtb	r3, r3
 378              	.LVL28:
 379              	.L21:
 262:Src/aes.c     ****     {
 380              		.loc 1 262 17 is_stmt 1 discriminator 1 view .LVU128
 262:Src/aes.c     ****     {
 381              		.loc 1 262 5 is_stmt 0 discriminator 1 view .LVU129
 382 001e 032B     		cmp	r3, #3
 383 0020 F5D9     		bls	.L20
 260:Src/aes.c     ****   {
 384              		.loc 1 260 22 is_stmt 1 discriminator 2 view .LVU130
 385 0022 0132     		adds	r2, r2, #1
 386              	.LVL29:
 260:Src/aes.c     ****   {
 387              		.loc 1 260 22 is_stmt 0 discriminator 2 view .LVU131
 388 0024 D2B2     		uxtb	r2, r2
 389              	.LVL30:
 260:Src/aes.c     ****   {
 390              		.loc 1 260 15 is_stmt 1 discriminator 2 view .LVU132
 260:Src/aes.c     ****   {
 391              		.loc 1 260 3 is_stmt 0 discriminator 2 view .LVU133
 392 0026 032A     		cmp	r2, #3
 393 0028 01D8     		bhi	.L31
 262:Src/aes.c     ****     {
 394              		.loc 1 262 12 view .LVU134
 395 002a 0023     		movs	r3, #0
 396              	.LVL31:
 262:Src/aes.c     ****     {
 397              		.loc 1 262 12 view .LVU135
 398 002c F7E7     		b	.L21
 399              	.LVL32:
 400              	.L31:
 265:Src/aes.c     ****     }
 266:Src/aes.c     ****   }
 267:Src/aes.c     **** }
 401              		.loc 1 267 1 view .LVU136
 402 002e 30BC     		pop	{r4, r5}
 403              	.LCFI7:
 404              		.cfi_restore 5
 405              		.cfi_restore 4
 406              		.cfi_def_cfa_offset 0
 407 0030 7047     		bx	lr
 408              	.L30:
 260:Src/aes.c     ****   {
 409              		.loc 1 260 22 is_stmt 1 view .LVU137
 410 0032 0132     		adds	r2, r2, #1
 411              	.LVL33:
 260:Src/aes.c     ****   {
 412              		.loc 1 260 22 is_stmt 0 view .LVU138
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 14


 413 0034 D2B2     		uxtb	r2, r2
 414              	.LVL34:
 260:Src/aes.c     ****   {
 415              		.loc 1 260 22 view .LVU139
 416 0036 E4E7     		b	.L24
 417              	.LVL35:
 418              	.L29:
 260:Src/aes.c     ****   {
 419              		.loc 1 260 22 view .LVU140
 420 0038 7047     		bx	lr
 421              	.L33:
 422 003a 00BF     		.align	2
 423              	.L32:
 424 003c 00000000 		.word	.LANCHOR0
 425              		.cfi_endproc
 426              	.LFE5:
 428              		.section	.text.ShiftRows,"ax",%progbits
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv4-sp-d16
 435              	ShiftRows:
 436              	.LVL36:
 437              	.LFB6:
 268:Src/aes.c     **** 
 269:Src/aes.c     **** // The ShiftRows() function shifts the rows in the state to the left.
 270:Src/aes.c     **** // Each row is shifted with different offset.
 271:Src/aes.c     **** // Offset = Row number. So the first row is not shifted.
 272:Src/aes.c     **** static void ShiftRows(state_t* state)
 273:Src/aes.c     **** {
 438              		.loc 1 273 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 274:Src/aes.c     ****   uint8_t temp;
 443              		.loc 1 274 3 view .LVU142
 275:Src/aes.c     **** 
 276:Src/aes.c     ****   // Rotate first row 1 columns to left  
 277:Src/aes.c     ****   temp           = (*state)[0][1];
 444              		.loc 1 277 3 view .LVU143
 445              		.loc 1 277 18 is_stmt 0 view .LVU144
 446 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 447              	.LVL37:
 278:Src/aes.c     ****   (*state)[0][1] = (*state)[1][1];
 448              		.loc 1 278 3 is_stmt 1 view .LVU145
 449              		.loc 1 278 31 is_stmt 0 view .LVU146
 450 0002 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 451              		.loc 1 278 18 view .LVU147
 452 0004 4270     		strb	r2, [r0, #1]
 279:Src/aes.c     ****   (*state)[1][1] = (*state)[2][1];
 453              		.loc 1 279 3 is_stmt 1 view .LVU148
 454              		.loc 1 279 31 is_stmt 0 view .LVU149
 455 0006 427A     		ldrb	r2, [r0, #9]	@ zero_extendqisi2
 456              		.loc 1 279 18 view .LVU150
 457 0008 4271     		strb	r2, [r0, #5]
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 15


 280:Src/aes.c     ****   (*state)[2][1] = (*state)[3][1];
 458              		.loc 1 280 3 is_stmt 1 view .LVU151
 459              		.loc 1 280 31 is_stmt 0 view .LVU152
 460 000a 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 461              		.loc 1 280 18 view .LVU153
 462 000c 4272     		strb	r2, [r0, #9]
 281:Src/aes.c     ****   (*state)[3][1] = temp;
 463              		.loc 1 281 3 is_stmt 1 view .LVU154
 464              		.loc 1 281 18 is_stmt 0 view .LVU155
 465 000e 4373     		strb	r3, [r0, #13]
 282:Src/aes.c     **** 
 283:Src/aes.c     ****   // Rotate second row 2 columns to left  
 284:Src/aes.c     ****   temp           = (*state)[0][2];
 466              		.loc 1 284 3 is_stmt 1 view .LVU156
 467              		.loc 1 284 18 is_stmt 0 view .LVU157
 468 0010 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 469              	.LVL38:
 285:Src/aes.c     ****   (*state)[0][2] = (*state)[2][2];
 470              		.loc 1 285 3 is_stmt 1 view .LVU158
 471              		.loc 1 285 31 is_stmt 0 view .LVU159
 472 0012 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 473              		.loc 1 285 18 view .LVU160
 474 0014 8270     		strb	r2, [r0, #2]
 286:Src/aes.c     ****   (*state)[2][2] = temp;
 475              		.loc 1 286 3 is_stmt 1 view .LVU161
 476              		.loc 1 286 18 is_stmt 0 view .LVU162
 477 0016 8372     		strb	r3, [r0, #10]
 287:Src/aes.c     **** 
 288:Src/aes.c     ****   temp           = (*state)[1][2];
 478              		.loc 1 288 3 is_stmt 1 view .LVU163
 479              		.loc 1 288 18 is_stmt 0 view .LVU164
 480 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 481              	.LVL39:
 289:Src/aes.c     ****   (*state)[1][2] = (*state)[3][2];
 482              		.loc 1 289 3 is_stmt 1 view .LVU165
 483              		.loc 1 289 31 is_stmt 0 view .LVU166
 484 001a 827B     		ldrb	r2, [r0, #14]	@ zero_extendqisi2
 485              		.loc 1 289 18 view .LVU167
 486 001c 8271     		strb	r2, [r0, #6]
 290:Src/aes.c     ****   (*state)[3][2] = temp;
 487              		.loc 1 290 3 is_stmt 1 view .LVU168
 488              		.loc 1 290 18 is_stmt 0 view .LVU169
 489 001e 8373     		strb	r3, [r0, #14]
 291:Src/aes.c     **** 
 292:Src/aes.c     ****   // Rotate third row 3 columns to left
 293:Src/aes.c     ****   temp           = (*state)[0][3];
 490              		.loc 1 293 3 is_stmt 1 view .LVU170
 491              		.loc 1 293 18 is_stmt 0 view .LVU171
 492 0020 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 493              	.LVL40:
 294:Src/aes.c     ****   (*state)[0][3] = (*state)[3][3];
 494              		.loc 1 294 3 is_stmt 1 view .LVU172
 495              		.loc 1 294 31 is_stmt 0 view .LVU173
 496 0022 C27B     		ldrb	r2, [r0, #15]	@ zero_extendqisi2
 497              		.loc 1 294 18 view .LVU174
 498 0024 C270     		strb	r2, [r0, #3]
 295:Src/aes.c     ****   (*state)[3][3] = (*state)[2][3];
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 16


 499              		.loc 1 295 3 is_stmt 1 view .LVU175
 500              		.loc 1 295 31 is_stmt 0 view .LVU176
 501 0026 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 502              		.loc 1 295 18 view .LVU177
 503 0028 C273     		strb	r2, [r0, #15]
 296:Src/aes.c     ****   (*state)[2][3] = (*state)[1][3];
 504              		.loc 1 296 3 is_stmt 1 view .LVU178
 505              		.loc 1 296 31 is_stmt 0 view .LVU179
 506 002a C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 507              		.loc 1 296 18 view .LVU180
 508 002c C272     		strb	r2, [r0, #11]
 297:Src/aes.c     ****   (*state)[1][3] = temp;
 509              		.loc 1 297 3 is_stmt 1 view .LVU181
 510              		.loc 1 297 18 is_stmt 0 view .LVU182
 511 002e C371     		strb	r3, [r0, #7]
 298:Src/aes.c     **** }
 512              		.loc 1 298 1 view .LVU183
 513 0030 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE6:
 517              		.section	.text.xtime,"ax",%progbits
 518              		.align	1
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv4-sp-d16
 524              	xtime:
 525              	.LVL41:
 526              	.LFB7:
 299:Src/aes.c     **** 
 300:Src/aes.c     **** static uint8_t xtime(uint8_t x)
 301:Src/aes.c     **** {
 527              		.loc 1 301 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 302:Src/aes.c     ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 532              		.loc 1 302 3 view .LVU185
 533              		.loc 1 302 18 is_stmt 0 view .LVU186
 534 0000 C309     		lsrs	r3, r0, #7
 535 0002 5A00     		lsls	r2, r3, #1
 536 0004 1344     		add	r3, r3, r2
 537 0006 03EBC303 		add	r3, r3, r3, lsl #3
 538 000a 83EA4000 		eor	r0, r3, r0, lsl #1
 539              	.LVL42:
 303:Src/aes.c     **** }
 540              		.loc 1 303 1 view .LVU187
 541 000e C0B2     		uxtb	r0, r0
 542 0010 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE7:
 546              		.section	.text.MixColumns,"ax",%progbits
 547              		.align	1
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 17


 551              		.fpu fpv4-sp-d16
 553              	MixColumns:
 554              	.LVL43:
 555              	.LFB8:
 304:Src/aes.c     **** 
 305:Src/aes.c     **** // MixColumns function mixes the columns of the state matrix
 306:Src/aes.c     **** static void MixColumns(state_t* state)
 307:Src/aes.c     **** {
 556              		.loc 1 307 1 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		.loc 1 307 1 is_stmt 0 view .LVU189
 561 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 562              	.LCFI8:
 563              		.cfi_def_cfa_offset 32
 564              		.cfi_offset 4, -32
 565              		.cfi_offset 5, -28
 566              		.cfi_offset 6, -24
 567              		.cfi_offset 7, -20
 568              		.cfi_offset 8, -16
 569              		.cfi_offset 9, -12
 570              		.cfi_offset 10, -8
 571              		.cfi_offset 14, -4
 572 0004 8146     		mov	r9, r0
 308:Src/aes.c     ****   uint8_t i;
 573              		.loc 1 308 3 is_stmt 1 view .LVU190
 309:Src/aes.c     ****   uint8_t Tmp, Tm, t;
 574              		.loc 1 309 3 view .LVU191
 310:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 575              		.loc 1 310 3 view .LVU192
 576              	.LVL44:
 577              		.loc 1 310 10 is_stmt 0 view .LVU193
 578 0006 0026     		movs	r6, #0
 579              		.loc 1 310 3 view .LVU194
 580 0008 2EE0     		b	.L37
 581              	.LVL45:
 582              	.L38:
 311:Src/aes.c     ****   {  
 312:Src/aes.c     ****     t   = (*state)[i][0];
 583              		.loc 1 312 5 is_stmt 1 discriminator 3 view .LVU195
 584              		.loc 1 312 9 is_stmt 0 discriminator 3 view .LVU196
 585 000a 19F826A0 		ldrb	r10, [r9, r6, lsl #2]	@ zero_extendqisi2
 586              	.LVL46:
 313:Src/aes.c     ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 587              		.loc 1 313 5 is_stmt 1 discriminator 3 view .LVU197
 588              		.loc 1 313 39 is_stmt 0 discriminator 3 view .LVU198
 589 000e 09EB8604 		add	r4, r9, r6, lsl #2
 590 0012 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 591              		.loc 1 313 9 discriminator 3 view .LVU199
 592 0014 80EA0A00 		eor	r0, r0, r10
 593              		.loc 1 313 56 discriminator 3 view .LVU200
 594 0018 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 595              		.loc 1 313 73 discriminator 3 view .LVU201
 596 001a E578     		ldrb	r5, [r4, #3]	@ zero_extendqisi2
 597              		.loc 1 313 9 discriminator 3 view .LVU202
 598 001c 4340     		eors	r3, r3, r0
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 18


 599 001e 5D40     		eors	r5, r5, r3
 600              	.LVL47:
 314:Src/aes.c     ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 601              		.loc 1 314 5 is_stmt 1 discriminator 3 view .LVU203
 602              		.loc 1 314 45 discriminator 3 view .LVU204
 603              		.loc 1 314 50 is_stmt 0 discriminator 3 view .LVU205
 604 0020 FFF7FEFF 		bl	xtime
 605              	.LVL48:
 606              		.loc 1 314 62 is_stmt 1 discriminator 3 view .LVU206
 607              		.loc 1 314 77 is_stmt 0 discriminator 3 view .LVU207
 608 0024 6840     		eors	r0, r0, r5
 609              	.LVL49:
 610              		.loc 1 314 77 discriminator 3 view .LVU208
 611 0026 8AEA0000 		eor	r0, r10, r0
 612 002a 09F82600 		strb	r0, [r9, r6, lsl #2]
 315:Src/aes.c     ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 613              		.loc 1 315 5 is_stmt 1 discriminator 3 view .LVU209
 614              		.loc 1 315 22 is_stmt 0 discriminator 3 view .LVU210
 615 002e 6778     		ldrb	r7, [r4, #1]	@ zero_extendqisi2
 616              		.loc 1 315 39 discriminator 3 view .LVU211
 617 0030 94F80280 		ldrb	r8, [r4, #2]	@ zero_extendqisi2
 618              	.LVL50:
 619              		.loc 1 315 45 is_stmt 1 discriminator 3 view .LVU212
 620              		.loc 1 315 50 is_stmt 0 discriminator 3 view .LVU213
 621 0034 87EA0800 		eor	r0, r7, r8
 622              	.LVL51:
 623              		.loc 1 315 50 discriminator 3 view .LVU214
 624 0038 FFF7FEFF 		bl	xtime
 625              	.LVL52:
 626              		.loc 1 315 62 is_stmt 1 discriminator 3 view .LVU215
 627              		.loc 1 315 77 is_stmt 0 discriminator 3 view .LVU216
 628 003c 6840     		eors	r0, r0, r5
 629              	.LVL53:
 630              		.loc 1 315 77 discriminator 3 view .LVU217
 631 003e 4740     		eors	r7, r7, r0
 632 0040 6770     		strb	r7, [r4, #1]
 316:Src/aes.c     ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 633              		.loc 1 316 5 is_stmt 1 discriminator 3 view .LVU218
 634              		.loc 1 316 39 is_stmt 0 discriminator 3 view .LVU219
 635 0042 E778     		ldrb	r7, [r4, #3]	@ zero_extendqisi2
 636              	.LVL54:
 637              		.loc 1 316 45 is_stmt 1 discriminator 3 view .LVU220
 638              		.loc 1 316 50 is_stmt 0 discriminator 3 view .LVU221
 639 0044 88EA0700 		eor	r0, r8, r7
 640              	.LVL55:
 641              		.loc 1 316 50 discriminator 3 view .LVU222
 642 0048 FFF7FEFF 		bl	xtime
 643              	.LVL56:
 644              		.loc 1 316 62 is_stmt 1 discriminator 3 view .LVU223
 645              		.loc 1 316 77 is_stmt 0 discriminator 3 view .LVU224
 646 004c 6840     		eors	r0, r0, r5
 647              	.LVL57:
 648              		.loc 1 316 77 discriminator 3 view .LVU225
 649 004e 88EA0008 		eor	r8, r8, r0
 650 0052 84F80280 		strb	r8, [r4, #2]
 317:Src/aes.c     ****     Tm  = (*state)[i][3] ^ t ;              Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 651              		.loc 1 317 5 is_stmt 1 discriminator 3 view .LVU226
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 19


 652              	.LVL58:
 653              		.loc 1 317 45 discriminator 3 view .LVU227
 654              		.loc 1 317 50 is_stmt 0 discriminator 3 view .LVU228
 655 0056 87EA0A00 		eor	r0, r7, r10
 656              	.LVL59:
 657              		.loc 1 317 50 discriminator 3 view .LVU229
 658 005a FFF7FEFF 		bl	xtime
 659              	.LVL60:
 660              		.loc 1 317 62 is_stmt 1 discriminator 3 view .LVU230
 661              		.loc 1 317 77 is_stmt 0 discriminator 3 view .LVU231
 662 005e 4540     		eors	r5, r5, r0
 663              	.LVL61:
 664              		.loc 1 317 77 discriminator 3 view .LVU232
 665 0060 7D40     		eors	r5, r5, r7
 666 0062 E570     		strb	r5, [r4, #3]
 310:Src/aes.c     ****   {  
 667              		.loc 1 310 22 is_stmt 1 discriminator 3 view .LVU233
 668 0064 0136     		adds	r6, r6, #1
 669              	.LVL62:
 310:Src/aes.c     ****   {  
 670              		.loc 1 310 22 is_stmt 0 discriminator 3 view .LVU234
 671 0066 F6B2     		uxtb	r6, r6
 672              	.LVL63:
 673              	.L37:
 310:Src/aes.c     ****   {  
 674              		.loc 1 310 15 is_stmt 1 discriminator 1 view .LVU235
 310:Src/aes.c     ****   {  
 675              		.loc 1 310 3 is_stmt 0 discriminator 1 view .LVU236
 676 0068 032E     		cmp	r6, #3
 677 006a CED9     		bls	.L38
 318:Src/aes.c     ****   }
 319:Src/aes.c     **** }
 678              		.loc 1 319 1 view .LVU237
 679 006c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 680              		.loc 1 319 1 view .LVU238
 681              		.cfi_endproc
 682              	.LFE8:
 684              		.section	.text.InvMixColumns,"ax",%progbits
 685              		.align	1
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu fpv4-sp-d16
 691              	InvMixColumns:
 692              	.LVL64:
 693              	.LFB9:
 320:Src/aes.c     **** 
 321:Src/aes.c     **** // Multiply is used to multiply numbers in the field GF(2^8)
 322:Src/aes.c     **** // Note: The last call to xtime() is unneeded, but often ends up generating a smaller binary
 323:Src/aes.c     **** //       The compiler seems to be able to vectorize the operation better this way.
 324:Src/aes.c     **** //       See https://github.com/kokke/tiny-AES-c/pull/34
 325:Src/aes.c     **** #if MULTIPLY_AS_A_FUNCTION
 326:Src/aes.c     **** static uint8_t Multiply(uint8_t x, uint8_t y)
 327:Src/aes.c     **** {
 328:Src/aes.c     ****   return (((y & 1) * x) ^
 329:Src/aes.c     ****        ((y>>1 & 1) * xtime(x)) ^
 330:Src/aes.c     ****        ((y>>2 & 1) * xtime(xtime(x))) ^
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 20


 331:Src/aes.c     ****        ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^
 332:Src/aes.c     ****        ((y>>4 & 1) * xtime(xtime(xtime(xtime(x)))))); /* this last call to xtime() can be omitted *
 333:Src/aes.c     ****   }
 334:Src/aes.c     **** #else
 335:Src/aes.c     **** #define Multiply(x, y)                                \
 336:Src/aes.c     ****       (  ((y & 1) * x) ^                              \
 337:Src/aes.c     ****       ((y>>1 & 1) * xtime(x)) ^                       \
 338:Src/aes.c     ****       ((y>>2 & 1) * xtime(xtime(x))) ^                \
 339:Src/aes.c     ****       ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^         \
 340:Src/aes.c     ****       ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))))   \
 341:Src/aes.c     **** 
 342:Src/aes.c     **** #endif
 343:Src/aes.c     **** 
 344:Src/aes.c     **** #if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)
 345:Src/aes.c     **** // MixColumns function mixes the columns of the state matrix.
 346:Src/aes.c     **** // The method used to multiply may be difficult to understand for the inexperienced.
 347:Src/aes.c     **** // Please use the references to gain more information.
 348:Src/aes.c     **** static void InvMixColumns(state_t* state)
 349:Src/aes.c     **** {
 694              		.loc 1 349 1 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 40
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		.loc 1 349 1 is_stmt 0 view .LVU240
 699 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 700              	.LCFI9:
 701              		.cfi_def_cfa_offset 36
 702              		.cfi_offset 4, -36
 703              		.cfi_offset 5, -32
 704              		.cfi_offset 6, -28
 705              		.cfi_offset 7, -24
 706              		.cfi_offset 8, -20
 707              		.cfi_offset 9, -16
 708              		.cfi_offset 10, -12
 709              		.cfi_offset 11, -8
 710              		.cfi_offset 14, -4
 711 0004 8BB0     		sub	sp, sp, #44
 712              	.LCFI10:
 713              		.cfi_def_cfa_offset 80
 714 0006 0090     		str	r0, [sp]
 350:Src/aes.c     ****   int i;
 715              		.loc 1 350 3 is_stmt 1 view .LVU241
 351:Src/aes.c     ****   uint8_t a, b, c, d;
 716              		.loc 1 351 3 view .LVU242
 352:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 717              		.loc 1 352 3 view .LVU243
 718              	.LVL65:
 719              		.loc 1 352 10 is_stmt 0 view .LVU244
 720 0008 4FF00009 		mov	r9, #0
 721              		.loc 1 352 3 view .LVU245
 722 000c A2E0     		b	.L41
 723              	.LVL66:
 724              	.L42:
 353:Src/aes.c     ****   { 
 354:Src/aes.c     ****     a = (*state)[i][0];
 725              		.loc 1 354 5 is_stmt 1 discriminator 3 view .LVU246
 726              		.loc 1 354 7 is_stmt 0 discriminator 3 view .LVU247
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 21


 727 000e 009B     		ldr	r3, [sp]
 728 0010 13F829B0 		ldrb	fp, [r3, r9, lsl #2]	@ zero_extendqisi2
 729              	.LVL67:
 355:Src/aes.c     ****     b = (*state)[i][1];
 730              		.loc 1 355 5 is_stmt 1 discriminator 3 view .LVU248
 731              		.loc 1 355 7 is_stmt 0 discriminator 3 view .LVU249
 732 0014 03EB8907 		add	r7, r3, r9, lsl #2
 733 0018 97F801A0 		ldrb	r10, [r7, #1]	@ zero_extendqisi2
 734              	.LVL68:
 356:Src/aes.c     ****     c = (*state)[i][2];
 735              		.loc 1 356 5 is_stmt 1 discriminator 3 view .LVU250
 736              		.loc 1 356 7 is_stmt 0 discriminator 3 view .LVU251
 737 001c 97F80280 		ldrb	r8, [r7, #2]	@ zero_extendqisi2
 738              	.LVL69:
 357:Src/aes.c     ****     d = (*state)[i][3];
 739              		.loc 1 357 5 is_stmt 1 discriminator 3 view .LVU252
 740              		.loc 1 357 7 is_stmt 0 discriminator 3 view .LVU253
 741 0020 FC78     		ldrb	r4, [r7, #3]	@ zero_extendqisi2
 742              	.LVL70:
 358:Src/aes.c     **** 
 359:Src/aes.c     ****     (*state)[i][0] = Multiply(a, 0x0e) ^ Multiply(b, 0x0b) ^ Multiply(c, 0x0d) ^ Multiply(d, 0x09);
 743              		.loc 1 359 5 is_stmt 1 discriminator 3 view .LVU254
 744              		.loc 1 359 22 is_stmt 0 discriminator 3 view .LVU255
 745 0022 5846     		mov	r0, fp
 746 0024 FFF7FEFF 		bl	xtime
 747              	.LVL71:
 748 0028 0190     		str	r0, [sp, #4]
 749 002a FFF7FEFF 		bl	xtime
 750              	.LVL72:
 751 002e 0290     		str	r0, [sp, #8]
 752 0030 FFF7FEFF 		bl	xtime
 753              	.LVL73:
 754 0034 0890     		str	r0, [sp, #32]
 755              		.loc 1 359 42 discriminator 3 view .LVU256
 756 0036 5046     		mov	r0, r10
 757 0038 FFF7FEFF 		bl	xtime
 758              	.LVL74:
 759 003c 0390     		str	r0, [sp, #12]
 760 003e FFF7FEFF 		bl	xtime
 761              	.LVL75:
 762 0042 0490     		str	r0, [sp, #16]
 763 0044 FFF7FEFF 		bl	xtime
 764              	.LVL76:
 765 0048 0646     		mov	r6, r0
 766              		.loc 1 359 62 discriminator 3 view .LVU257
 767 004a 4046     		mov	r0, r8
 768 004c FFF7FEFF 		bl	xtime
 769              	.LVL77:
 770 0050 0590     		str	r0, [sp, #20]
 771 0052 FFF7FEFF 		bl	xtime
 772              	.LVL78:
 773 0056 0690     		str	r0, [sp, #24]
 774 0058 FFF7FEFF 		bl	xtime
 775              	.LVL79:
 776 005c 0546     		mov	r5, r0
 777              		.loc 1 359 82 discriminator 3 view .LVU258
 778 005e 2046     		mov	r0, r4
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 22


 779 0060 FFF7FEFF 		bl	xtime
 780              	.LVL80:
 781 0064 0990     		str	r0, [sp, #36]
 782 0066 FFF7FEFF 		bl	xtime
 783              	.LVL81:
 784 006a 0790     		str	r0, [sp, #28]
 785 006c FFF7FEFF 		bl	xtime
 786              	.LVL82:
 787              		.loc 1 359 22 discriminator 3 view .LVU259
 788 0070 019B     		ldr	r3, [sp, #4]
 789 0072 0299     		ldr	r1, [sp, #8]
 790 0074 4B40     		eors	r3, r3, r1
 791 0076 DBB2     		uxtb	r3, r3
 792 0078 0899     		ldr	r1, [sp, #32]
 793 007a 4B40     		eors	r3, r3, r1
 794 007c DBB2     		uxtb	r3, r3
 795              		.loc 1 359 42 discriminator 3 view .LVU260
 796 007e 039A     		ldr	r2, [sp, #12]
 797 0080 82EA0A02 		eor	r2, r2, r10
 798 0084 D2B2     		uxtb	r2, r2
 799 0086 7240     		eors	r2, r2, r6
 800 0088 D2B2     		uxtb	r2, r2
 801              		.loc 1 359 40 discriminator 3 view .LVU261
 802 008a 5340     		eors	r3, r3, r2
 803              		.loc 1 359 62 discriminator 3 view .LVU262
 804 008c 069A     		ldr	r2, [sp, #24]
 805 008e 82EA0802 		eor	r2, r2, r8
 806 0092 D2B2     		uxtb	r2, r2
 807 0094 6A40     		eors	r2, r2, r5
 808 0096 D2B2     		uxtb	r2, r2
 809              		.loc 1 359 60 discriminator 3 view .LVU263
 810 0098 5340     		eors	r3, r3, r2
 811              		.loc 1 359 82 discriminator 3 view .LVU264
 812 009a 80EA0402 		eor	r2, r0, r4
 813 009e D2B2     		uxtb	r2, r2
 814              		.loc 1 359 80 discriminator 3 view .LVU265
 815 00a0 5340     		eors	r3, r3, r2
 816              		.loc 1 359 20 discriminator 3 view .LVU266
 817 00a2 009A     		ldr	r2, [sp]
 818 00a4 02F82930 		strb	r3, [r2, r9, lsl #2]
 360:Src/aes.c     ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 819              		.loc 1 360 5 is_stmt 1 discriminator 3 view .LVU267
 820              		.loc 1 360 22 is_stmt 0 discriminator 3 view .LVU268
 821 00a8 81EA0B03 		eor	r3, r1, fp
 822 00ac DAB2     		uxtb	r2, r3
 823              		.loc 1 360 42 discriminator 3 view .LVU269
 824 00ae 039B     		ldr	r3, [sp, #12]
 825 00b0 9C46     		mov	ip, r3
 826 00b2 049B     		ldr	r3, [sp, #16]
 827 00b4 8CEA0303 		eor	r3, ip, r3
 828 00b8 DBB2     		uxtb	r3, r3
 829 00ba 7340     		eors	r3, r3, r6
 830 00bc DBB2     		uxtb	r3, r3
 831              		.loc 1 360 40 discriminator 3 view .LVU270
 832 00be 5340     		eors	r3, r3, r2
 833              		.loc 1 360 62 discriminator 3 view .LVU271
 834 00c0 059A     		ldr	r2, [sp, #20]
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 23


 835 00c2 82EA0802 		eor	r2, r2, r8
 836 00c6 D2B2     		uxtb	r2, r2
 837 00c8 6A40     		eors	r2, r2, r5
 838 00ca D2B2     		uxtb	r2, r2
 839              		.loc 1 360 60 discriminator 3 view .LVU272
 840 00cc 5340     		eors	r3, r3, r2
 841              		.loc 1 360 82 discriminator 3 view .LVU273
 842 00ce 079A     		ldr	r2, [sp, #28]
 843 00d0 6240     		eors	r2, r2, r4
 844 00d2 D2B2     		uxtb	r2, r2
 845 00d4 4240     		eors	r2, r2, r0
 846 00d6 D2B2     		uxtb	r2, r2
 847              		.loc 1 360 80 discriminator 3 view .LVU274
 848 00d8 5340     		eors	r3, r3, r2
 849              		.loc 1 360 20 discriminator 3 view .LVU275
 850 00da 7B70     		strb	r3, [r7, #1]
 361:Src/aes.c     ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 851              		.loc 1 361 5 is_stmt 1 discriminator 3 view .LVU276
 852              		.loc 1 361 22 is_stmt 0 discriminator 3 view .LVU277
 853 00dc 029A     		ldr	r2, [sp, #8]
 854 00de 82EA0B03 		eor	r3, r2, fp
 855 00e2 DBB2     		uxtb	r3, r3
 856 00e4 4B40     		eors	r3, r3, r1
 857 00e6 DBB2     		uxtb	r3, r3
 858              		.loc 1 361 42 discriminator 3 view .LVU278
 859 00e8 86EA0A02 		eor	r2, r6, r10
 860 00ec D2B2     		uxtb	r2, r2
 861              		.loc 1 361 40 discriminator 3 view .LVU279
 862 00ee 5340     		eors	r3, r3, r2
 863              		.loc 1 361 62 discriminator 3 view .LVU280
 864 00f0 059A     		ldr	r2, [sp, #20]
 865 00f2 9446     		mov	ip, r2
 866 00f4 069A     		ldr	r2, [sp, #24]
 867 00f6 9646     		mov	lr, r2
 868 00f8 8CEA0202 		eor	r2, ip, r2
 869 00fc D2B2     		uxtb	r2, r2
 870 00fe 6A40     		eors	r2, r2, r5
 871 0100 D2B2     		uxtb	r2, r2
 872              		.loc 1 361 60 discriminator 3 view .LVU281
 873 0102 5340     		eors	r3, r3, r2
 874              		.loc 1 361 82 discriminator 3 view .LVU282
 875 0104 099A     		ldr	r2, [sp, #36]
 876 0106 5440     		eors	r4, r4, r2
 877              	.LVL83:
 878              		.loc 1 361 82 discriminator 3 view .LVU283
 879 0108 E4B2     		uxtb	r4, r4
 880 010a 4440     		eors	r4, r4, r0
 881 010c E4B2     		uxtb	r4, r4
 882              		.loc 1 361 80 discriminator 3 view .LVU284
 883 010e 6340     		eors	r3, r3, r4
 884              		.loc 1 361 20 discriminator 3 view .LVU285
 885 0110 BB70     		strb	r3, [r7, #2]
 362:Src/aes.c     ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 886              		.loc 1 362 5 is_stmt 1 discriminator 3 view .LVU286
 887              		.loc 1 362 22 is_stmt 0 discriminator 3 view .LVU287
 888 0112 019B     		ldr	r3, [sp, #4]
 889 0114 83EA0B0B 		eor	fp, r3, fp
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 24


 890              	.LVL84:
 891              		.loc 1 362 22 discriminator 3 view .LVU288
 892 0118 5FFA8BFB 		uxtb	fp, fp
 893 011c 81EA0B0B 		eor	fp, r1, fp
 894 0120 5FFA8BFB 		uxtb	fp, fp
 895              		.loc 1 362 42 discriminator 3 view .LVU289
 896 0124 049B     		ldr	r3, [sp, #16]
 897 0126 83EA0A0A 		eor	r10, r3, r10
 898              	.LVL85:
 899              		.loc 1 362 42 discriminator 3 view .LVU290
 900 012a 5FFA8AFA 		uxtb	r10, r10
 901 012e 86EA0A06 		eor	r6, r6, r10
 902 0132 F6B2     		uxtb	r6, r6
 903              		.loc 1 362 40 discriminator 3 view .LVU291
 904 0134 8BEA0606 		eor	r6, fp, r6
 905              		.loc 1 362 62 discriminator 3 view .LVU292
 906 0138 85EA0805 		eor	r5, r5, r8
 907 013c EDB2     		uxtb	r5, r5
 908              		.loc 1 362 60 discriminator 3 view .LVU293
 909 013e 7540     		eors	r5, r5, r6
 910              		.loc 1 362 82 discriminator 3 view .LVU294
 911 0140 1346     		mov	r3, r2
 912 0142 079A     		ldr	r2, [sp, #28]
 913 0144 5340     		eors	r3, r3, r2
 914 0146 DBB2     		uxtb	r3, r3
 915 0148 5840     		eors	r0, r0, r3
 916 014a C0B2     		uxtb	r0, r0
 917              		.loc 1 362 80 discriminator 3 view .LVU295
 918 014c 6840     		eors	r0, r0, r5
 919              		.loc 1 362 20 discriminator 3 view .LVU296
 920 014e F870     		strb	r0, [r7, #3]
 352:Src/aes.c     ****   { 
 921              		.loc 1 352 22 is_stmt 1 discriminator 3 view .LVU297
 922 0150 09F10109 		add	r9, r9, #1
 923              	.LVL86:
 924              	.L41:
 352:Src/aes.c     ****   { 
 925              		.loc 1 352 15 discriminator 1 view .LVU298
 352:Src/aes.c     ****   { 
 926              		.loc 1 352 3 is_stmt 0 discriminator 1 view .LVU299
 927 0154 B9F1030F 		cmp	r9, #3
 928 0158 7FF759AF 		ble	.L42
 363:Src/aes.c     ****   }
 364:Src/aes.c     **** }
 929              		.loc 1 364 1 view .LVU300
 930 015c 0BB0     		add	sp, sp, #44
 931              	.LCFI11:
 932              		.cfi_def_cfa_offset 36
 933              	.LVL87:
 934              		.loc 1 364 1 view .LVU301
 935              		@ sp needed
 936 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 937              		.loc 1 364 1 view .LVU302
 938              		.cfi_endproc
 939              	.LFE9:
 941              		.section	.text.InvSubBytes,"ax",%progbits
 942              		.align	1
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 25


 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu fpv4-sp-d16
 948              	InvSubBytes:
 949              	.LVL88:
 950              	.LFB10:
 365:Src/aes.c     **** 
 366:Src/aes.c     **** 
 367:Src/aes.c     **** // The SubBytes Function Substitutes the values in the
 368:Src/aes.c     **** // state matrix with values in an S-box.
 369:Src/aes.c     **** static void InvSubBytes(state_t* state)
 370:Src/aes.c     **** {
 951              		.loc 1 370 1 is_stmt 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 371:Src/aes.c     ****   uint8_t i, j;
 956              		.loc 1 371 3 view .LVU304
 372:Src/aes.c     ****   for (i = 0; i < 4; ++i)
 957              		.loc 1 372 3 view .LVU305
 958              		.loc 1 372 10 is_stmt 0 view .LVU306
 959 0000 0022     		movs	r2, #0
 960              	.LVL89:
 961              	.L50:
 962              		.loc 1 372 15 is_stmt 1 view .LVU307
 963              		.loc 1 372 3 is_stmt 0 view .LVU308
 964 0002 032A     		cmp	r2, #3
 965 0004 18D8     		bhi	.L55
 373:Src/aes.c     ****   {
 374:Src/aes.c     ****     for (j = 0; j < 4; ++j)
 966              		.loc 1 374 12 view .LVU309
 967 0006 0023     		movs	r3, #0
 968              	.LVL90:
 969              		.loc 1 374 17 is_stmt 1 view .LVU310
 970              		.loc 1 374 5 is_stmt 0 view .LVU311
 971 0008 032B     		cmp	r3, #3
 972 000a 12D8     		bhi	.L56
 370:Src/aes.c     ****   uint8_t i, j;
 973              		.loc 1 370 1 view .LVU312
 974 000c 30B4     		push	{r4, r5}
 975              	.LCFI12:
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 4, -8
 978              		.cfi_offset 5, -4
 979              	.L46:
 375:Src/aes.c     ****     {
 376:Src/aes.c     ****       (*state)[j][i] = getSBoxInvert((*state)[j][i]);
 980              		.loc 1 376 7 is_stmt 1 discriminator 3 view .LVU313
 981              		.loc 1 376 24 is_stmt 0 discriminator 3 view .LVU314
 982 000e 00EB8301 		add	r1, r0, r3, lsl #2
 983 0012 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 984 0014 094D     		ldr	r5, .L58
 985 0016 2C5D     		ldrb	r4, [r5, r4]	@ zero_extendqisi2
 986              		.loc 1 376 22 discriminator 3 view .LVU315
 987 0018 8C54     		strb	r4, [r1, r2]
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 26


 374:Src/aes.c     ****     {
 988              		.loc 1 374 24 is_stmt 1 discriminator 3 view .LVU316
 989 001a 0133     		adds	r3, r3, #1
 990              	.LVL91:
 374:Src/aes.c     ****     {
 991              		.loc 1 374 24 is_stmt 0 discriminator 3 view .LVU317
 992 001c DBB2     		uxtb	r3, r3
 993              	.LVL92:
 994              	.L47:
 374:Src/aes.c     ****     {
 995              		.loc 1 374 17 is_stmt 1 discriminator 1 view .LVU318
 374:Src/aes.c     ****     {
 996              		.loc 1 374 5 is_stmt 0 discriminator 1 view .LVU319
 997 001e 032B     		cmp	r3, #3
 998 0020 F5D9     		bls	.L46
 372:Src/aes.c     ****   {
 999              		.loc 1 372 22 is_stmt 1 discriminator 2 view .LVU320
 1000 0022 0132     		adds	r2, r2, #1
 1001              	.LVL93:
 372:Src/aes.c     ****   {
 1002              		.loc 1 372 22 is_stmt 0 discriminator 2 view .LVU321
 1003 0024 D2B2     		uxtb	r2, r2
 1004              	.LVL94:
 372:Src/aes.c     ****   {
 1005              		.loc 1 372 15 is_stmt 1 discriminator 2 view .LVU322
 372:Src/aes.c     ****   {
 1006              		.loc 1 372 3 is_stmt 0 discriminator 2 view .LVU323
 1007 0026 032A     		cmp	r2, #3
 1008 0028 01D8     		bhi	.L57
 374:Src/aes.c     ****     {
 1009              		.loc 1 374 12 view .LVU324
 1010 002a 0023     		movs	r3, #0
 1011              	.LVL95:
 374:Src/aes.c     ****     {
 1012              		.loc 1 374 12 view .LVU325
 1013 002c F7E7     		b	.L47
 1014              	.LVL96:
 1015              	.L57:
 377:Src/aes.c     ****     }
 378:Src/aes.c     ****   }
 379:Src/aes.c     **** }
 1016              		.loc 1 379 1 view .LVU326
 1017 002e 30BC     		pop	{r4, r5}
 1018              	.LCFI13:
 1019              		.cfi_restore 5
 1020              		.cfi_restore 4
 1021              		.cfi_def_cfa_offset 0
 1022 0030 7047     		bx	lr
 1023              	.L56:
 372:Src/aes.c     ****   {
 1024              		.loc 1 372 22 is_stmt 1 view .LVU327
 1025 0032 0132     		adds	r2, r2, #1
 1026              	.LVL97:
 372:Src/aes.c     ****   {
 1027              		.loc 1 372 22 is_stmt 0 view .LVU328
 1028 0034 D2B2     		uxtb	r2, r2
 1029              	.LVL98:
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 27


 372:Src/aes.c     ****   {
 1030              		.loc 1 372 22 view .LVU329
 1031 0036 E4E7     		b	.L50
 1032              	.LVL99:
 1033              	.L55:
 372:Src/aes.c     ****   {
 1034              		.loc 1 372 22 view .LVU330
 1035 0038 7047     		bx	lr
 1036              	.L59:
 1037 003a 00BF     		.align	2
 1038              	.L58:
 1039 003c 00000000 		.word	.LANCHOR2
 1040              		.cfi_endproc
 1041              	.LFE10:
 1043              		.section	.text.InvShiftRows,"ax",%progbits
 1044              		.align	1
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu fpv4-sp-d16
 1050              	InvShiftRows:
 1051              	.LVL100:
 1052              	.LFB11:
 380:Src/aes.c     **** 
 381:Src/aes.c     **** static void InvShiftRows(state_t* state)
 382:Src/aes.c     **** {
 1053              		.loc 1 382 1 is_stmt 1 view -0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 383:Src/aes.c     ****   uint8_t temp;
 1058              		.loc 1 383 3 view .LVU332
 384:Src/aes.c     **** 
 385:Src/aes.c     ****   // Rotate first row 1 columns to right  
 386:Src/aes.c     ****   temp = (*state)[3][1];
 1059              		.loc 1 386 3 view .LVU333
 1060              		.loc 1 386 8 is_stmt 0 view .LVU334
 1061 0000 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 1062              	.LVL101:
 387:Src/aes.c     ****   (*state)[3][1] = (*state)[2][1];
 1063              		.loc 1 387 3 is_stmt 1 view .LVU335
 1064              		.loc 1 387 31 is_stmt 0 view .LVU336
 1065 0002 427A     		ldrb	r2, [r0, #9]	@ zero_extendqisi2
 1066              		.loc 1 387 18 view .LVU337
 1067 0004 4273     		strb	r2, [r0, #13]
 388:Src/aes.c     ****   (*state)[2][1] = (*state)[1][1];
 1068              		.loc 1 388 3 is_stmt 1 view .LVU338
 1069              		.loc 1 388 31 is_stmt 0 view .LVU339
 1070 0006 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 1071              		.loc 1 388 18 view .LVU340
 1072 0008 4272     		strb	r2, [r0, #9]
 389:Src/aes.c     ****   (*state)[1][1] = (*state)[0][1];
 1073              		.loc 1 389 3 is_stmt 1 view .LVU341
 1074              		.loc 1 389 31 is_stmt 0 view .LVU342
 1075 000a 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 1076              		.loc 1 389 18 view .LVU343
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 28


 1077 000c 4271     		strb	r2, [r0, #5]
 390:Src/aes.c     ****   (*state)[0][1] = temp;
 1078              		.loc 1 390 3 is_stmt 1 view .LVU344
 1079              		.loc 1 390 18 is_stmt 0 view .LVU345
 1080 000e 4370     		strb	r3, [r0, #1]
 391:Src/aes.c     **** 
 392:Src/aes.c     ****   // Rotate second row 2 columns to right 
 393:Src/aes.c     ****   temp = (*state)[0][2];
 1081              		.loc 1 393 3 is_stmt 1 view .LVU346
 1082              		.loc 1 393 8 is_stmt 0 view .LVU347
 1083 0010 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1084              	.LVL102:
 394:Src/aes.c     ****   (*state)[0][2] = (*state)[2][2];
 1085              		.loc 1 394 3 is_stmt 1 view .LVU348
 1086              		.loc 1 394 31 is_stmt 0 view .LVU349
 1087 0012 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 1088              		.loc 1 394 18 view .LVU350
 1089 0014 8270     		strb	r2, [r0, #2]
 395:Src/aes.c     ****   (*state)[2][2] = temp;
 1090              		.loc 1 395 3 is_stmt 1 view .LVU351
 1091              		.loc 1 395 18 is_stmt 0 view .LVU352
 1092 0016 8372     		strb	r3, [r0, #10]
 396:Src/aes.c     **** 
 397:Src/aes.c     ****   temp = (*state)[1][2];
 1093              		.loc 1 397 3 is_stmt 1 view .LVU353
 1094              		.loc 1 397 8 is_stmt 0 view .LVU354
 1095 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 1096              	.LVL103:
 398:Src/aes.c     ****   (*state)[1][2] = (*state)[3][2];
 1097              		.loc 1 398 3 is_stmt 1 view .LVU355
 1098              		.loc 1 398 31 is_stmt 0 view .LVU356
 1099 001a 827B     		ldrb	r2, [r0, #14]	@ zero_extendqisi2
 1100              		.loc 1 398 18 view .LVU357
 1101 001c 8271     		strb	r2, [r0, #6]
 399:Src/aes.c     ****   (*state)[3][2] = temp;
 1102              		.loc 1 399 3 is_stmt 1 view .LVU358
 1103              		.loc 1 399 18 is_stmt 0 view .LVU359
 1104 001e 8373     		strb	r3, [r0, #14]
 400:Src/aes.c     **** 
 401:Src/aes.c     ****   // Rotate third row 3 columns to right
 402:Src/aes.c     ****   temp = (*state)[0][3];
 1105              		.loc 1 402 3 is_stmt 1 view .LVU360
 1106              		.loc 1 402 8 is_stmt 0 view .LVU361
 1107 0020 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1108              	.LVL104:
 403:Src/aes.c     ****   (*state)[0][3] = (*state)[1][3];
 1109              		.loc 1 403 3 is_stmt 1 view .LVU362
 1110              		.loc 1 403 31 is_stmt 0 view .LVU363
 1111 0022 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 1112              		.loc 1 403 18 view .LVU364
 1113 0024 C270     		strb	r2, [r0, #3]
 404:Src/aes.c     ****   (*state)[1][3] = (*state)[2][3];
 1114              		.loc 1 404 3 is_stmt 1 view .LVU365
 1115              		.loc 1 404 31 is_stmt 0 view .LVU366
 1116 0026 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 1117              		.loc 1 404 18 view .LVU367
 1118 0028 C271     		strb	r2, [r0, #7]
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 29


 405:Src/aes.c     ****   (*state)[2][3] = (*state)[3][3];
 1119              		.loc 1 405 3 is_stmt 1 view .LVU368
 1120              		.loc 1 405 31 is_stmt 0 view .LVU369
 1121 002a C27B     		ldrb	r2, [r0, #15]	@ zero_extendqisi2
 1122              		.loc 1 405 18 view .LVU370
 1123 002c C272     		strb	r2, [r0, #11]
 406:Src/aes.c     ****   (*state)[3][3] = temp;
 1124              		.loc 1 406 3 is_stmt 1 view .LVU371
 1125              		.loc 1 406 18 is_stmt 0 view .LVU372
 1126 002e C373     		strb	r3, [r0, #15]
 407:Src/aes.c     **** }
 1127              		.loc 1 407 1 view .LVU373
 1128 0030 7047     		bx	lr
 1129              		.cfi_endproc
 1130              	.LFE11:
 1132              		.section	.text.Cipher,"ax",%progbits
 1133              		.align	1
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu fpv4-sp-d16
 1139              	Cipher:
 1140              	.LVL105:
 1141              	.LFB12:
 408:Src/aes.c     **** #endif // #if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)
 409:Src/aes.c     **** 
 410:Src/aes.c     **** // Cipher is the main function that encrypts the PlainText.
 411:Src/aes.c     **** static void Cipher(state_t* state, const uint8_t* RoundKey)
 412:Src/aes.c     **** {
 1142              		.loc 1 412 1 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              		.loc 1 412 1 is_stmt 0 view .LVU375
 1147 0000 70B5     		push	{r4, r5, r6, lr}
 1148              	.LCFI14:
 1149              		.cfi_def_cfa_offset 16
 1150              		.cfi_offset 4, -16
 1151              		.cfi_offset 5, -12
 1152              		.cfi_offset 6, -8
 1153              		.cfi_offset 14, -4
 1154 0002 0546     		mov	r5, r0
 1155 0004 0E46     		mov	r6, r1
 413:Src/aes.c     ****   uint8_t round = 0;
 1156              		.loc 1 413 3 is_stmt 1 view .LVU376
 1157              	.LVL106:
 414:Src/aes.c     **** 
 415:Src/aes.c     ****   // Add the First round key to the state before starting the rounds.
 416:Src/aes.c     ****   AddRoundKey(0, state, RoundKey);
 1158              		.loc 1 416 3 view .LVU377
 1159 0006 0A46     		mov	r2, r1
 1160 0008 0146     		mov	r1, r0
 1161              	.LVL107:
 1162              		.loc 1 416 3 is_stmt 0 view .LVU378
 1163 000a 0020     		movs	r0, #0
 1164              	.LVL108:
 1165              		.loc 1 416 3 view .LVU379
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 30


 1166 000c FFF7FEFF 		bl	AddRoundKey
 1167              	.LVL109:
 417:Src/aes.c     **** 
 418:Src/aes.c     ****   // There will be Nr rounds.
 419:Src/aes.c     ****   // The first Nr-1 rounds are identical.
 420:Src/aes.c     ****   // These Nr rounds are executed in the loop below.
 421:Src/aes.c     ****   // Last one without MixColumns()
 422:Src/aes.c     ****   for (round = 1; ; ++round)
 1168              		.loc 1 422 3 is_stmt 1 view .LVU380
 1169              		.loc 1 422 14 is_stmt 0 view .LVU381
 1170 0010 0124     		movs	r4, #1
 1171 0012 09E0     		b	.L63
 1172              	.LVL110:
 1173              	.L65:
 423:Src/aes.c     ****   {
 424:Src/aes.c     ****     SubBytes(state);
 425:Src/aes.c     ****     ShiftRows(state);
 426:Src/aes.c     ****     if (round == Nr) {
 427:Src/aes.c     ****       break;
 428:Src/aes.c     ****     }
 429:Src/aes.c     ****     MixColumns(state);
 1174              		.loc 1 429 5 is_stmt 1 view .LVU382
 1175 0014 2846     		mov	r0, r5
 1176 0016 FFF7FEFF 		bl	MixColumns
 1177              	.LVL111:
 430:Src/aes.c     ****     AddRoundKey(round, state, RoundKey);
 1178              		.loc 1 430 5 view .LVU383
 1179 001a 3246     		mov	r2, r6
 1180 001c 2946     		mov	r1, r5
 1181 001e 2046     		mov	r0, r4
 1182 0020 FFF7FEFF 		bl	AddRoundKey
 1183              	.LVL112:
 422:Src/aes.c     ****   {
 1184              		.loc 1 422 21 view .LVU384
 1185 0024 0134     		adds	r4, r4, #1
 1186              	.LVL113:
 422:Src/aes.c     ****   {
 1187              		.loc 1 422 21 is_stmt 0 view .LVU385
 1188 0026 E4B2     		uxtb	r4, r4
 1189              	.LVL114:
 422:Src/aes.c     ****   {
 1190              		.loc 1 422 19 is_stmt 1 view .LVU386
 1191              	.L63:
 424:Src/aes.c     ****     ShiftRows(state);
 1192              		.loc 1 424 5 view .LVU387
 1193 0028 2846     		mov	r0, r5
 1194 002a FFF7FEFF 		bl	SubBytes
 1195              	.LVL115:
 425:Src/aes.c     ****     if (round == Nr) {
 1196              		.loc 1 425 5 view .LVU388
 1197 002e 2846     		mov	r0, r5
 1198 0030 FFF7FEFF 		bl	ShiftRows
 1199              	.LVL116:
 426:Src/aes.c     ****       break;
 1200              		.loc 1 426 5 view .LVU389
 426:Src/aes.c     ****       break;
 1201              		.loc 1 426 8 is_stmt 0 view .LVU390
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 31


 1202 0034 0A2C     		cmp	r4, #10
 1203 0036 EDD1     		bne	.L65
 431:Src/aes.c     ****   }
 432:Src/aes.c     ****   // Add round key to last round
 433:Src/aes.c     ****   AddRoundKey(Nr, state, RoundKey);
 1204              		.loc 1 433 3 is_stmt 1 view .LVU391
 1205 0038 3246     		mov	r2, r6
 1206 003a 2946     		mov	r1, r5
 1207 003c 0A20     		movs	r0, #10
 1208 003e FFF7FEFF 		bl	AddRoundKey
 1209              	.LVL117:
 434:Src/aes.c     **** }
 1210              		.loc 1 434 1 is_stmt 0 view .LVU392
 1211 0042 70BD     		pop	{r4, r5, r6, pc}
 1212              		.loc 1 434 1 view .LVU393
 1213              		.cfi_endproc
 1214              	.LFE12:
 1216              		.section	.text.InvCipher,"ax",%progbits
 1217              		.align	1
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1221              		.fpu fpv4-sp-d16
 1223              	InvCipher:
 1224              	.LVL118:
 1225              	.LFB13:
 435:Src/aes.c     **** 
 436:Src/aes.c     **** #if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)
 437:Src/aes.c     **** static void InvCipher(state_t* state, const uint8_t* RoundKey)
 438:Src/aes.c     **** {
 1226              		.loc 1 438 1 is_stmt 1 view -0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              		.loc 1 438 1 is_stmt 0 view .LVU395
 1231 0000 70B5     		push	{r4, r5, r6, lr}
 1232              	.LCFI15:
 1233              		.cfi_def_cfa_offset 16
 1234              		.cfi_offset 4, -16
 1235              		.cfi_offset 5, -12
 1236              		.cfi_offset 6, -8
 1237              		.cfi_offset 14, -4
 1238 0002 0546     		mov	r5, r0
 1239 0004 0E46     		mov	r6, r1
 439:Src/aes.c     ****   uint8_t round = 0;
 1240              		.loc 1 439 3 is_stmt 1 view .LVU396
 1241              	.LVL119:
 440:Src/aes.c     **** 
 441:Src/aes.c     ****   // Add the First round key to the state before starting the rounds.
 442:Src/aes.c     ****   AddRoundKey(Nr, state, RoundKey);
 1242              		.loc 1 442 3 view .LVU397
 1243 0006 0A46     		mov	r2, r1
 1244 0008 0146     		mov	r1, r0
 1245              	.LVL120:
 1246              		.loc 1 442 3 is_stmt 0 view .LVU398
 1247 000a 0A20     		movs	r0, #10
 1248              	.LVL121:
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 32


 1249              		.loc 1 442 3 view .LVU399
 1250 000c FFF7FEFF 		bl	AddRoundKey
 1251              	.LVL122:
 443:Src/aes.c     **** 
 444:Src/aes.c     ****   // There will be Nr rounds.
 445:Src/aes.c     ****   // The first Nr-1 rounds are identical.
 446:Src/aes.c     ****   // These Nr rounds are executed in the loop below.
 447:Src/aes.c     ****   // Last one without InvMixColumn()
 448:Src/aes.c     ****   for (round = (Nr - 1); ; --round)
 1252              		.loc 1 448 3 is_stmt 1 view .LVU400
 1253              		.loc 1 448 14 is_stmt 0 view .LVU401
 1254 0010 0924     		movs	r4, #9
 1255 0012 04E0     		b	.L68
 1256              	.LVL123:
 1257              	.L70:
 449:Src/aes.c     ****   {
 450:Src/aes.c     ****     InvShiftRows(state);
 451:Src/aes.c     ****     InvSubBytes(state);
 452:Src/aes.c     ****     AddRoundKey(round, state, RoundKey);
 453:Src/aes.c     ****     if (round == 0) {
 454:Src/aes.c     ****       break;
 455:Src/aes.c     ****     }
 456:Src/aes.c     ****     InvMixColumns(state);
 1258              		.loc 1 456 5 is_stmt 1 view .LVU402
 1259 0014 2846     		mov	r0, r5
 1260 0016 FFF7FEFF 		bl	InvMixColumns
 1261              	.LVL124:
 448:Src/aes.c     ****   {
 1262              		.loc 1 448 28 view .LVU403
 1263 001a 013C     		subs	r4, r4, #1
 1264              	.LVL125:
 448:Src/aes.c     ****   {
 1265              		.loc 1 448 28 is_stmt 0 view .LVU404
 1266 001c E4B2     		uxtb	r4, r4
 1267              	.LVL126:
 448:Src/aes.c     ****   {
 1268              		.loc 1 448 26 is_stmt 1 view .LVU405
 1269              	.L68:
 450:Src/aes.c     ****     InvSubBytes(state);
 1270              		.loc 1 450 5 view .LVU406
 1271 001e 2846     		mov	r0, r5
 1272 0020 FFF7FEFF 		bl	InvShiftRows
 1273              	.LVL127:
 451:Src/aes.c     ****     AddRoundKey(round, state, RoundKey);
 1274              		.loc 1 451 5 view .LVU407
 1275 0024 2846     		mov	r0, r5
 1276 0026 FFF7FEFF 		bl	InvSubBytes
 1277              	.LVL128:
 452:Src/aes.c     ****     if (round == 0) {
 1278              		.loc 1 452 5 view .LVU408
 1279 002a 3246     		mov	r2, r6
 1280 002c 2946     		mov	r1, r5
 1281 002e 2046     		mov	r0, r4
 1282 0030 FFF7FEFF 		bl	AddRoundKey
 1283              	.LVL129:
 453:Src/aes.c     ****       break;
 1284              		.loc 1 453 5 view .LVU409
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 33


 453:Src/aes.c     ****       break;
 1285              		.loc 1 453 8 is_stmt 0 view .LVU410
 1286 0034 002C     		cmp	r4, #0
 1287 0036 EDD1     		bne	.L70
 457:Src/aes.c     ****   }
 458:Src/aes.c     **** 
 459:Src/aes.c     **** }
 1288              		.loc 1 459 1 view .LVU411
 1289 0038 70BD     		pop	{r4, r5, r6, pc}
 1290              		.loc 1 459 1 view .LVU412
 1291              		.cfi_endproc
 1292              	.LFE13:
 1294              		.section	.text.XorWithIv,"ax",%progbits
 1295              		.align	1
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1299              		.fpu fpv4-sp-d16
 1301              	XorWithIv:
 1302              	.LVL130:
 1303              	.LFB16:
 460:Src/aes.c     **** #endif // #if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)
 461:Src/aes.c     **** 
 462:Src/aes.c     **** /*****************************************************************************/
 463:Src/aes.c     **** /* Public functions:                                                         */
 464:Src/aes.c     **** /*****************************************************************************/
 465:Src/aes.c     **** #if defined(ECB) && (ECB == 1)
 466:Src/aes.c     **** 
 467:Src/aes.c     **** 
 468:Src/aes.c     **** void AES_ECB_encrypt(const struct AES_ctx* ctx, uint8_t* buf)
 469:Src/aes.c     **** {
 470:Src/aes.c     ****   // The next function call encrypts the PlainText with the Key using AES algorithm.
 471:Src/aes.c     ****   Cipher((state_t*)buf, ctx->RoundKey);
 472:Src/aes.c     **** }
 473:Src/aes.c     **** 
 474:Src/aes.c     **** void AES_ECB_decrypt(const struct AES_ctx* ctx, uint8_t* buf)
 475:Src/aes.c     **** {
 476:Src/aes.c     ****   // The next function call decrypts the PlainText with the Key using AES algorithm.
 477:Src/aes.c     ****   InvCipher((state_t*)buf, ctx->RoundKey);
 478:Src/aes.c     **** }
 479:Src/aes.c     **** 
 480:Src/aes.c     **** 
 481:Src/aes.c     **** #endif // #if defined(ECB) && (ECB == 1)
 482:Src/aes.c     **** 
 483:Src/aes.c     **** 
 484:Src/aes.c     **** 
 485:Src/aes.c     **** 
 486:Src/aes.c     **** 
 487:Src/aes.c     **** #if defined(CBC) && (CBC == 1)
 488:Src/aes.c     **** 
 489:Src/aes.c     **** 
 490:Src/aes.c     **** static void XorWithIv(uint8_t* buf, const uint8_t* Iv)
 491:Src/aes.c     **** {
 1304              		.loc 1 491 1 is_stmt 1 view -0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 34


 1308              		@ link register save eliminated.
 492:Src/aes.c     ****     uint8_t i;
 1309              		.loc 1 492 5 view .LVU414
 493:Src/aes.c     ****     for (i = 0; i < AES_BLOCKLEN; ++i) // The block in AES is always 128bit no matter the key size
 1310              		.loc 1 493 5 view .LVU415
 1311              		.loc 1 493 12 is_stmt 0 view .LVU416
 1312 0000 0023     		movs	r3, #0
 1313              	.LVL131:
 1314              		.loc 1 493 17 is_stmt 1 view .LVU417
 1315              		.loc 1 493 5 is_stmt 0 view .LVU418
 1316 0002 0F2B     		cmp	r3, #15
 1317 0004 0BD8     		bhi	.L77
 491:Src/aes.c     ****     uint8_t i;
 1318              		.loc 1 491 1 view .LVU419
 1319 0006 10B4     		push	{r4}
 1320              	.LCFI16:
 1321              		.cfi_def_cfa_offset 4
 1322              		.cfi_offset 4, -4
 1323              	.L73:
 494:Src/aes.c     ****     {
 495:Src/aes.c     ****         buf[i] ^= Iv[i];
 1324              		.loc 1 495 9 is_stmt 1 discriminator 3 view .LVU420
 1325              		.loc 1 495 21 is_stmt 0 discriminator 3 view .LVU421
 1326 0008 CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 1327              		.loc 1 495 16 discriminator 3 view .LVU422
 1328 000a C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 1329 000c 6240     		eors	r2, r2, r4
 1330 000e C254     		strb	r2, [r0, r3]
 493:Src/aes.c     ****     {
 1331              		.loc 1 493 35 is_stmt 1 discriminator 3 view .LVU423
 1332 0010 0133     		adds	r3, r3, #1
 1333              	.LVL132:
 493:Src/aes.c     ****     {
 1334              		.loc 1 493 35 is_stmt 0 discriminator 3 view .LVU424
 1335 0012 DBB2     		uxtb	r3, r3
 1336              	.LVL133:
 493:Src/aes.c     ****     {
 1337              		.loc 1 493 17 is_stmt 1 discriminator 3 view .LVU425
 493:Src/aes.c     ****     {
 1338              		.loc 1 493 5 is_stmt 0 discriminator 3 view .LVU426
 1339 0014 0F2B     		cmp	r3, #15
 1340 0016 F7D9     		bls	.L73
 496:Src/aes.c     ****     }
 497:Src/aes.c     **** }
 1341              		.loc 1 497 1 view .LVU427
 1342 0018 5DF8044B 		ldr	r4, [sp], #4
 1343              	.LCFI17:
 1344              		.cfi_restore 4
 1345              		.cfi_def_cfa_offset 0
 1346 001c 7047     		bx	lr
 1347              	.L77:
 1348              		.loc 1 497 1 view .LVU428
 1349 001e 7047     		bx	lr
 1350              		.cfi_endproc
 1351              	.LFE16:
 1353              		.section	.text.AES_init_ctx,"ax",%progbits
 1354              		.align	1
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 35


 1355              		.global	AES_init_ctx
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1359              		.fpu fpv4-sp-d16
 1361              	AES_init_ctx:
 1362              	.LVL134:
 1363              	.LFB1:
 226:Src/aes.c     ****   KeyExpansion(ctx->RoundKey, key);
 1364              		.loc 1 226 1 is_stmt 1 view -0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 226:Src/aes.c     ****   KeyExpansion(ctx->RoundKey, key);
 1368              		.loc 1 226 1 is_stmt 0 view .LVU430
 1369 0000 08B5     		push	{r3, lr}
 1370              	.LCFI18:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 3, -8
 1373              		.cfi_offset 14, -4
 227:Src/aes.c     **** }
 1374              		.loc 1 227 3 is_stmt 1 view .LVU431
 1375 0002 FFF7FEFF 		bl	KeyExpansion
 1376              	.LVL135:
 228:Src/aes.c     **** #if (defined(CBC) && (CBC == 1)) || (defined(CTR) && (CTR == 1))
 1377              		.loc 1 228 1 is_stmt 0 view .LVU432
 1378 0006 08BD     		pop	{r3, pc}
 1379              		.cfi_endproc
 1380              	.LFE1:
 1382              		.section	.text.AES_init_ctx_iv,"ax",%progbits
 1383              		.align	1
 1384              		.global	AES_init_ctx_iv
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1388              		.fpu fpv4-sp-d16
 1390              	AES_init_ctx_iv:
 1391              	.LVL136:
 1392              	.LFB2:
 231:Src/aes.c     ****   KeyExpansion(ctx->RoundKey, key);
 1393              		.loc 1 231 1 is_stmt 1 view -0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 0
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 231:Src/aes.c     ****   KeyExpansion(ctx->RoundKey, key);
 1397              		.loc 1 231 1 is_stmt 0 view .LVU434
 1398 0000 38B5     		push	{r3, r4, r5, lr}
 1399              	.LCFI19:
 1400              		.cfi_def_cfa_offset 16
 1401              		.cfi_offset 3, -16
 1402              		.cfi_offset 4, -12
 1403              		.cfi_offset 5, -8
 1404              		.cfi_offset 14, -4
 1405 0002 0446     		mov	r4, r0
 1406 0004 1546     		mov	r5, r2
 232:Src/aes.c     ****   memcpy (ctx->Iv, iv, AES_BLOCKLEN);
 1407              		.loc 1 232 3 is_stmt 1 view .LVU435
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 36


 1408 0006 FFF7FEFF 		bl	KeyExpansion
 1409              	.LVL137:
 233:Src/aes.c     **** }
 1410              		.loc 1 233 3 view .LVU436
 1411 000a 2868     		ldr	r0, [r5]	@ unaligned
 1412 000c 6968     		ldr	r1, [r5, #4]	@ unaligned
 1413 000e AA68     		ldr	r2, [r5, #8]	@ unaligned
 1414 0010 EB68     		ldr	r3, [r5, #12]	@ unaligned
 1415 0012 C4F8B000 		str	r0, [r4, #176]	@ unaligned
 1416 0016 C4F8B410 		str	r1, [r4, #180]	@ unaligned
 1417 001a C4F8B820 		str	r2, [r4, #184]	@ unaligned
 1418 001e C4F8BC30 		str	r3, [r4, #188]	@ unaligned
 234:Src/aes.c     **** void AES_ctx_set_iv(struct AES_ctx* ctx, const uint8_t* iv)
 1419              		.loc 1 234 1 is_stmt 0 view .LVU437
 1420 0022 38BD     		pop	{r3, r4, r5, pc}
 234:Src/aes.c     **** void AES_ctx_set_iv(struct AES_ctx* ctx, const uint8_t* iv)
 1421              		.loc 1 234 1 view .LVU438
 1422              		.cfi_endproc
 1423              	.LFE2:
 1425              		.section	.text.AES_ctx_set_iv,"ax",%progbits
 1426              		.align	1
 1427              		.global	AES_ctx_set_iv
 1428              		.syntax unified
 1429              		.thumb
 1430              		.thumb_func
 1431              		.fpu fpv4-sp-d16
 1433              	AES_ctx_set_iv:
 1434              	.LVL138:
 1435              	.LFB3:
 236:Src/aes.c     ****   memcpy (ctx->Iv, iv, AES_BLOCKLEN);
 1436              		.loc 1 236 1 is_stmt 1 view -0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 236:Src/aes.c     ****   memcpy (ctx->Iv, iv, AES_BLOCKLEN);
 1441              		.loc 1 236 1 is_stmt 0 view .LVU440
 1442 0000 30B4     		push	{r4, r5}
 1443              	.LCFI20:
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 4, -8
 1446              		.cfi_offset 5, -4
 237:Src/aes.c     **** }
 1447              		.loc 1 237 3 is_stmt 1 view .LVU441
 1448 0002 0D68     		ldr	r5, [r1]	@ unaligned
 1449 0004 4C68     		ldr	r4, [r1, #4]	@ unaligned
 1450 0006 8A68     		ldr	r2, [r1, #8]	@ unaligned
 1451 0008 CB68     		ldr	r3, [r1, #12]	@ unaligned
 1452 000a C0F8B050 		str	r5, [r0, #176]	@ unaligned
 1453 000e C0F8B440 		str	r4, [r0, #180]	@ unaligned
 1454 0012 C0F8B820 		str	r2, [r0, #184]	@ unaligned
 1455 0016 C0F8BC30 		str	r3, [r0, #188]	@ unaligned
 238:Src/aes.c     **** #endif
 1456              		.loc 1 238 1 is_stmt 0 view .LVU442
 1457 001a 30BC     		pop	{r4, r5}
 1458              	.LCFI21:
 1459              		.cfi_restore 5
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 37


 1460              		.cfi_restore 4
 1461              		.cfi_def_cfa_offset 0
 1462 001c 7047     		bx	lr
 1463              		.cfi_endproc
 1464              	.LFE3:
 1466              		.section	.text.AES_ECB_encrypt,"ax",%progbits
 1467              		.align	1
 1468              		.global	AES_ECB_encrypt
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1472              		.fpu fpv4-sp-d16
 1474              	AES_ECB_encrypt:
 1475              	.LVL139:
 1476              	.LFB14:
 469:Src/aes.c     ****   // The next function call encrypts the PlainText with the Key using AES algorithm.
 1477              		.loc 1 469 1 is_stmt 1 view -0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 469:Src/aes.c     ****   // The next function call encrypts the PlainText with the Key using AES algorithm.
 1481              		.loc 1 469 1 is_stmt 0 view .LVU444
 1482 0000 08B5     		push	{r3, lr}
 1483              	.LCFI22:
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 3, -8
 1486              		.cfi_offset 14, -4
 1487 0002 0B46     		mov	r3, r1
 471:Src/aes.c     **** }
 1488              		.loc 1 471 3 is_stmt 1 view .LVU445
 1489 0004 0146     		mov	r1, r0
 1490              	.LVL140:
 471:Src/aes.c     **** }
 1491              		.loc 1 471 3 is_stmt 0 view .LVU446
 1492 0006 1846     		mov	r0, r3
 1493              	.LVL141:
 471:Src/aes.c     **** }
 1494              		.loc 1 471 3 view .LVU447
 1495 0008 FFF7FEFF 		bl	Cipher
 1496              	.LVL142:
 472:Src/aes.c     **** 
 1497              		.loc 1 472 1 view .LVU448
 1498 000c 08BD     		pop	{r3, pc}
 1499              		.cfi_endproc
 1500              	.LFE14:
 1502              		.section	.text.AES_ECB_decrypt,"ax",%progbits
 1503              		.align	1
 1504              		.global	AES_ECB_decrypt
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu fpv4-sp-d16
 1510              	AES_ECB_decrypt:
 1511              	.LVL143:
 1512              	.LFB15:
 475:Src/aes.c     ****   // The next function call decrypts the PlainText with the Key using AES algorithm.
 1513              		.loc 1 475 1 is_stmt 1 view -0
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 38


 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 0
 1516              		@ frame_needed = 0, uses_anonymous_args = 0
 475:Src/aes.c     ****   // The next function call decrypts the PlainText with the Key using AES algorithm.
 1517              		.loc 1 475 1 is_stmt 0 view .LVU450
 1518 0000 08B5     		push	{r3, lr}
 1519              	.LCFI23:
 1520              		.cfi_def_cfa_offset 8
 1521              		.cfi_offset 3, -8
 1522              		.cfi_offset 14, -4
 1523 0002 0B46     		mov	r3, r1
 477:Src/aes.c     **** }
 1524              		.loc 1 477 3 is_stmt 1 view .LVU451
 1525 0004 0146     		mov	r1, r0
 1526              	.LVL144:
 477:Src/aes.c     **** }
 1527              		.loc 1 477 3 is_stmt 0 view .LVU452
 1528 0006 1846     		mov	r0, r3
 1529              	.LVL145:
 477:Src/aes.c     **** }
 1530              		.loc 1 477 3 view .LVU453
 1531 0008 FFF7FEFF 		bl	InvCipher
 1532              	.LVL146:
 478:Src/aes.c     **** 
 1533              		.loc 1 478 1 view .LVU454
 1534 000c 08BD     		pop	{r3, pc}
 1535              		.cfi_endproc
 1536              	.LFE15:
 1538              		.section	.text.AES_CBC_encrypt_buffer,"ax",%progbits
 1539              		.align	1
 1540              		.global	AES_CBC_encrypt_buffer
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu fpv4-sp-d16
 1546              	AES_CBC_encrypt_buffer:
 1547              	.LVL147:
 1548              	.LFB17:
 498:Src/aes.c     **** 
 499:Src/aes.c     **** void AES_CBC_encrypt_buffer(struct AES_ctx *ctx, uint8_t* buf, uint32_t length)
 500:Src/aes.c     **** {
 1549              		.loc 1 500 1 is_stmt 1 view -0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              		.loc 1 500 1 is_stmt 0 view .LVU456
 1554 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1555              	.LCFI24:
 1556              		.cfi_def_cfa_offset 24
 1557              		.cfi_offset 4, -24
 1558              		.cfi_offset 5, -20
 1559              		.cfi_offset 6, -16
 1560              		.cfi_offset 7, -12
 1561              		.cfi_offset 8, -8
 1562              		.cfi_offset 14, -4
 1563 0004 0646     		mov	r6, r0
 1564 0006 0C46     		mov	r4, r1
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 39


 1565 0008 1746     		mov	r7, r2
 501:Src/aes.c     ****     uintptr_t i;
 1566              		.loc 1 501 5 is_stmt 1 view .LVU457
 502:Src/aes.c     ****     uint8_t *Iv = ctx->Iv;
 1567              		.loc 1 502 5 view .LVU458
 1568              		.loc 1 502 14 is_stmt 0 view .LVU459
 1569 000a 00F1B008 		add	r8, r0, #176
 1570              	.LVL148:
 503:Src/aes.c     ****     for (i = 0; i < length; i += AES_BLOCKLEN)
 1571              		.loc 1 503 5 is_stmt 1 view .LVU460
 502:Src/aes.c     ****     uint8_t *Iv = ctx->Iv;
 1572              		.loc 1 502 14 is_stmt 0 view .LVU461
 1573 000e 4146     		mov	r1, r8
 1574              	.LVL149:
 1575              		.loc 1 503 12 view .LVU462
 1576 0010 0025     		movs	r5, #0
 1577              	.LVL150:
 1578              	.L89:
 1579              		.loc 1 503 17 is_stmt 1 discriminator 1 view .LVU463
 1580              		.loc 1 503 5 is_stmt 0 discriminator 1 view .LVU464
 1581 0012 BD42     		cmp	r5, r7
 1582 0014 0AD2     		bcs	.L92
 504:Src/aes.c     ****     {
 505:Src/aes.c     ****         XorWithIv(buf, Iv);
 1583              		.loc 1 505 9 is_stmt 1 discriminator 3 view .LVU465
 1584 0016 2046     		mov	r0, r4
 1585 0018 FFF7FEFF 		bl	XorWithIv
 1586              	.LVL151:
 506:Src/aes.c     ****         Cipher((state_t*)buf, ctx->RoundKey);
 1587              		.loc 1 506 9 discriminator 3 view .LVU466
 1588 001c 3146     		mov	r1, r6
 1589 001e 2046     		mov	r0, r4
 1590 0020 FFF7FEFF 		bl	Cipher
 1591              	.LVL152:
 507:Src/aes.c     ****         Iv = buf;
 1592              		.loc 1 507 9 discriminator 3 view .LVU467
 508:Src/aes.c     ****         buf += AES_BLOCKLEN;
 1593              		.loc 1 508 9 discriminator 3 view .LVU468
 503:Src/aes.c     ****     {
 1594              		.loc 1 503 29 discriminator 3 view .LVU469
 503:Src/aes.c     ****     {
 1595              		.loc 1 503 31 is_stmt 0 discriminator 3 view .LVU470
 1596 0024 1035     		adds	r5, r5, #16
 1597              	.LVL153:
 507:Src/aes.c     ****         Iv = buf;
 1598              		.loc 1 507 12 discriminator 3 view .LVU471
 1599 0026 2146     		mov	r1, r4
 1600              		.loc 1 508 13 discriminator 3 view .LVU472
 1601 0028 1034     		adds	r4, r4, #16
 1602              	.LVL154:
 1603              		.loc 1 508 13 discriminator 3 view .LVU473
 1604 002a F2E7     		b	.L89
 1605              	.L92:
 509:Src/aes.c     ****     }
 510:Src/aes.c     ****     /* store Iv in ctx for next call */
 511:Src/aes.c     ****     memcpy(ctx->Iv, Iv, AES_BLOCKLEN);
 1606              		.loc 1 511 5 is_stmt 1 view .LVU474
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 40


 1607 002c 0C68     		ldr	r4, [r1]	@ unaligned
 1608              	.LVL155:
 1609              		.loc 1 511 5 is_stmt 0 view .LVU475
 1610 002e 4868     		ldr	r0, [r1, #4]	@ unaligned
 1611 0030 8A68     		ldr	r2, [r1, #8]	@ unaligned
 1612 0032 CB68     		ldr	r3, [r1, #12]	@ unaligned
 1613 0034 C6F8B040 		str	r4, [r6, #176]	@ unaligned
 1614 0038 C8F80400 		str	r0, [r8, #4]	@ unaligned
 1615 003c C8F80820 		str	r2, [r8, #8]	@ unaligned
 1616 0040 C8F80C30 		str	r3, [r8, #12]	@ unaligned
 512:Src/aes.c     **** }
 1617              		.loc 1 512 1 view .LVU476
 1618 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1619              		.loc 1 512 1 view .LVU477
 1620              		.cfi_endproc
 1621              	.LFE17:
 1623              		.section	.text.AES_CBC_decrypt_buffer,"ax",%progbits
 1624              		.align	1
 1625              		.global	AES_CBC_decrypt_buffer
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu fpv4-sp-d16
 1631              	AES_CBC_decrypt_buffer:
 1632              	.LVL156:
 1633              	.LFB18:
 513:Src/aes.c     **** 
 514:Src/aes.c     **** void AES_CBC_decrypt_buffer(struct AES_ctx* ctx, uint8_t* buf,  uint32_t length)
 515:Src/aes.c     **** {
 1634              		.loc 1 515 1 is_stmt 1 view -0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 16
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638              		.loc 1 515 1 is_stmt 0 view .LVU479
 1639 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1640              	.LCFI25:
 1641              		.cfi_def_cfa_offset 28
 1642              		.cfi_offset 4, -28
 1643              		.cfi_offset 5, -24
 1644              		.cfi_offset 6, -20
 1645              		.cfi_offset 7, -16
 1646              		.cfi_offset 8, -12
 1647              		.cfi_offset 9, -8
 1648              		.cfi_offset 14, -4
 1649 0004 85B0     		sub	sp, sp, #20
 1650              	.LCFI26:
 1651              		.cfi_def_cfa_offset 48
 1652 0006 0746     		mov	r7, r0
 1653 0008 0C46     		mov	r4, r1
 1654 000a 9146     		mov	r9, r2
 516:Src/aes.c     ****   uintptr_t i;
 1655              		.loc 1 516 3 is_stmt 1 view .LVU480
 517:Src/aes.c     ****   uint8_t storeNextIv[AES_BLOCKLEN];
 1656              		.loc 1 517 3 view .LVU481
 518:Src/aes.c     ****   for (i = 0; i < length; i += AES_BLOCKLEN)
 1657              		.loc 1 518 3 view .LVU482
 1658              	.LVL157:
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 41


 1659              		.loc 1 518 10 is_stmt 0 view .LVU483
 1660 000c 4FF00008 		mov	r8, #0
 1661              	.LVL158:
 1662              	.L94:
 1663              		.loc 1 518 15 is_stmt 1 discriminator 1 view .LVU484
 1664              		.loc 1 518 3 is_stmt 0 discriminator 1 view .LVU485
 1665 0010 C845     		cmp	r8, r9
 1666 0012 1DD2     		bcs	.L97
 519:Src/aes.c     ****   {
 520:Src/aes.c     ****     memcpy(storeNextIv, buf, AES_BLOCKLEN);
 1667              		.loc 1 520 5 is_stmt 1 discriminator 3 view .LVU486
 1668 0014 6D46     		mov	r5, sp
 1669 0016 2068     		ldr	r0, [r4]	@ unaligned
 1670 0018 6168     		ldr	r1, [r4, #4]	@ unaligned
 1671 001a A268     		ldr	r2, [r4, #8]	@ unaligned
 1672 001c E368     		ldr	r3, [r4, #12]	@ unaligned
 1673 001e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 521:Src/aes.c     ****     InvCipher((state_t*)buf, ctx->RoundKey);
 1674              		.loc 1 521 5 discriminator 3 view .LVU487
 1675 0020 3946     		mov	r1, r7
 1676 0022 2046     		mov	r0, r4
 1677 0024 FFF7FEFF 		bl	InvCipher
 1678              	.LVL159:
 522:Src/aes.c     ****     XorWithIv(buf, ctx->Iv);
 1679              		.loc 1 522 5 discriminator 3 view .LVU488
 1680              		.loc 1 522 23 is_stmt 0 discriminator 3 view .LVU489
 1681 0028 07F1B006 		add	r6, r7, #176
 1682              		.loc 1 522 5 discriminator 3 view .LVU490
 1683 002c 3146     		mov	r1, r6
 1684 002e 2046     		mov	r0, r4
 1685 0030 FFF7FEFF 		bl	XorWithIv
 1686              	.LVL160:
 523:Src/aes.c     ****     memcpy(ctx->Iv, storeNextIv, AES_BLOCKLEN);
 1687              		.loc 1 523 5 is_stmt 1 discriminator 3 view .LVU491
 1688 0034 6D46     		mov	r5, sp
 1689 0036 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1690 0038 C7F8B000 		str	r0, [r7, #176]	@ unaligned
 1691 003c C7F8B410 		str	r1, [r7, #180]	@ unaligned
 1692 0040 C7F8B820 		str	r2, [r7, #184]	@ unaligned
 1693 0044 C7F8BC30 		str	r3, [r7, #188]	@ unaligned
 524:Src/aes.c     ****     buf += AES_BLOCKLEN;
 1694              		.loc 1 524 5 discriminator 3 view .LVU492
 1695              		.loc 1 524 9 is_stmt 0 discriminator 3 view .LVU493
 1696 0048 1034     		adds	r4, r4, #16
 1697              	.LVL161:
 518:Src/aes.c     ****   {
 1698              		.loc 1 518 27 is_stmt 1 discriminator 3 view .LVU494
 518:Src/aes.c     ****   {
 1699              		.loc 1 518 29 is_stmt 0 discriminator 3 view .LVU495
 1700 004a 08F11008 		add	r8, r8, #16
 1701              	.LVL162:
 518:Src/aes.c     ****   {
 1702              		.loc 1 518 29 discriminator 3 view .LVU496
 1703 004e DFE7     		b	.L94
 1704              	.L97:
 525:Src/aes.c     ****   }
 526:Src/aes.c     **** 
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 42


 527:Src/aes.c     **** }
 1705              		.loc 1 527 1 view .LVU497
 1706 0050 05B0     		add	sp, sp, #20
 1707              	.LCFI27:
 1708              		.cfi_def_cfa_offset 28
 1709              		@ sp needed
 1710 0052 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1711              		.loc 1 527 1 view .LVU498
 1712              		.cfi_endproc
 1713              	.LFE18:
 1715              		.section	.text.AES_CTR_xcrypt_buffer,"ax",%progbits
 1716              		.align	1
 1717              		.global	AES_CTR_xcrypt_buffer
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1721              		.fpu fpv4-sp-d16
 1723              	AES_CTR_xcrypt_buffer:
 1724              	.LVL163:
 1725              	.LFB19:
 528:Src/aes.c     **** 
 529:Src/aes.c     **** #endif // #if defined(CBC) && (CBC == 1)
 530:Src/aes.c     **** 
 531:Src/aes.c     **** 
 532:Src/aes.c     **** 
 533:Src/aes.c     **** #if defined(CTR) && (CTR == 1)
 534:Src/aes.c     **** 
 535:Src/aes.c     **** /* Symmetrical operation: same function for encrypting as for decrypting. Note any IV/nonce should 
 536:Src/aes.c     **** void AES_CTR_xcrypt_buffer(struct AES_ctx* ctx, uint8_t* buf, uint32_t length)
 537:Src/aes.c     **** {
 1726              		.loc 1 537 1 is_stmt 1 view -0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 16
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 1730              		.loc 1 537 1 is_stmt 0 view .LVU500
 1731 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1732              	.LCFI28:
 1733              		.cfi_def_cfa_offset 24
 1734              		.cfi_offset 4, -24
 1735              		.cfi_offset 5, -20
 1736              		.cfi_offset 6, -16
 1737              		.cfi_offset 7, -12
 1738              		.cfi_offset 8, -8
 1739              		.cfi_offset 14, -4
 1740 0004 84B0     		sub	sp, sp, #16
 1741              	.LCFI29:
 1742              		.cfi_def_cfa_offset 40
 1743 0006 8046     		mov	r8, r0
 1744 0008 0E46     		mov	r6, r1
 1745 000a 1746     		mov	r7, r2
 538:Src/aes.c     ****   uint8_t buffer[AES_BLOCKLEN];
 1746              		.loc 1 538 3 is_stmt 1 view .LVU501
 539:Src/aes.c     ****   
 540:Src/aes.c     ****   unsigned i;
 1747              		.loc 1 540 3 view .LVU502
 541:Src/aes.c     ****   int bi;
 1748              		.loc 1 541 3 view .LVU503
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 43


 542:Src/aes.c     ****   for (i = 0, bi = AES_BLOCKLEN; i < length; ++i, ++bi)
 1749              		.loc 1 542 3 view .LVU504
 1750              	.LVL164:
 1751              		.loc 1 542 18 is_stmt 0 view .LVU505
 1752 000c 1023     		movs	r3, #16
 1753              		.loc 1 542 10 view .LVU506
 1754 000e 0024     		movs	r4, #0
 1755              		.loc 1 542 3 view .LVU507
 1756 0010 10E0     		b	.L99
 1757              	.LVL165:
 1758              	.L108:
 543:Src/aes.c     ****   {
 544:Src/aes.c     ****     if (bi == AES_BLOCKLEN) /* we need to regen xor compliment in buffer */
 545:Src/aes.c     ****     {
 546:Src/aes.c     ****       
 547:Src/aes.c     ****       memcpy(buffer, ctx->Iv, AES_BLOCKLEN);
 548:Src/aes.c     ****       Cipher((state_t*)buffer,ctx->RoundKey);
 549:Src/aes.c     **** 
 550:Src/aes.c     ****       /* Increment Iv and handle overflow */
 551:Src/aes.c     ****       for (bi = (AES_BLOCKLEN - 1); bi >= 0; --bi)
 552:Src/aes.c     ****       {
 553:Src/aes.c     **** 	/* inc will overflow */
 554:Src/aes.c     ****         if (ctx->Iv[bi] == 255)
 555:Src/aes.c     ****         {
 556:Src/aes.c     ****           ctx->Iv[bi] = 0;
 1759              		.loc 1 556 11 is_stmt 1 view .LVU508
 1760              		.loc 1 556 23 is_stmt 0 view .LVU509
 1761 0012 08EB0302 		add	r2, r8, r3
 1762 0016 0021     		movs	r1, #0
 1763 0018 82F8B010 		strb	r1, [r2, #176]
 557:Src/aes.c     ****           continue;
 1764              		.loc 1 557 11 is_stmt 1 view .LVU510
 551:Src/aes.c     ****       {
 1765              		.loc 1 551 46 view .LVU511
 1766 001c 013B     		subs	r3, r3, #1
 1767              	.LVL166:
 551:Src/aes.c     ****       {
 1768              		.loc 1 551 46 is_stmt 0 view .LVU512
 1769 001e 1AE0     		b	.L101
 1770              	.L107:
 558:Src/aes.c     ****         } 
 559:Src/aes.c     ****         ctx->Iv[bi] += 1;
 560:Src/aes.c     ****         break;   
 561:Src/aes.c     ****       }
 562:Src/aes.c     ****       bi = 0;
 1771              		.loc 1 562 10 view .LVU513
 1772 0020 0023     		movs	r3, #0
 1773              	.LVL167:
 1774              	.L100:
 563:Src/aes.c     ****     }
 564:Src/aes.c     **** 
 565:Src/aes.c     ****     buf[i] = (buf[i] ^ buffer[bi]);
 1775              		.loc 1 565 5 is_stmt 1 discriminator 2 view .LVU514
 1776              		.loc 1 565 18 is_stmt 0 discriminator 2 view .LVU515
 1777 0022 355D     		ldrb	r5, [r6, r4]	@ zero_extendqisi2
 1778              		.loc 1 565 30 discriminator 2 view .LVU516
 1779 0024 04AA     		add	r2, sp, #16
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 44


 1780 0026 1A44     		add	r2, r2, r3
 1781 0028 12F8101C 		ldrb	r1, [r2, #-16]	@ zero_extendqisi2
 1782              		.loc 1 565 12 discriminator 2 view .LVU517
 1783 002c 4D40     		eors	r5, r5, r1
 1784 002e 3555     		strb	r5, [r6, r4]
 542:Src/aes.c     ****   {
 1785              		.loc 1 542 46 is_stmt 1 discriminator 2 view .LVU518
 1786 0030 0134     		adds	r4, r4, #1
 1787              	.LVL168:
 542:Src/aes.c     ****   {
 1788              		.loc 1 542 51 is_stmt 0 discriminator 2 view .LVU519
 1789 0032 0133     		adds	r3, r3, #1
 1790              	.LVL169:
 1791              	.L99:
 542:Src/aes.c     ****   {
 1792              		.loc 1 542 34 is_stmt 1 discriminator 1 view .LVU520
 542:Src/aes.c     ****   {
 1793              		.loc 1 542 3 is_stmt 0 discriminator 1 view .LVU521
 1794 0034 BC42     		cmp	r4, r7
 1795 0036 1CD2     		bcs	.L106
 544:Src/aes.c     ****     {
 1796              		.loc 1 544 5 is_stmt 1 view .LVU522
 544:Src/aes.c     ****     {
 1797              		.loc 1 544 8 is_stmt 0 view .LVU523
 1798 0038 102B     		cmp	r3, #16
 1799 003a F2D1     		bne	.L100
 547:Src/aes.c     ****       Cipher((state_t*)buffer,ctx->RoundKey);
 1800              		.loc 1 547 7 is_stmt 1 view .LVU524
 1801 003c 6D46     		mov	r5, sp
 1802 003e 4346     		mov	r3, r8
 1803              	.LVL170:
 547:Src/aes.c     ****       Cipher((state_t*)buffer,ctx->RoundKey);
 1804              		.loc 1 547 7 is_stmt 0 view .LVU525
 1805 0040 53F8B00F 		ldr	r0, [r3, #176]!	@ unaligned
 1806 0044 5968     		ldr	r1, [r3, #4]	@ unaligned
 1807 0046 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1808 0048 DB68     		ldr	r3, [r3, #12]	@ unaligned
 1809 004a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 548:Src/aes.c     **** 
 1810              		.loc 1 548 7 is_stmt 1 view .LVU526
 1811 004c 4146     		mov	r1, r8
 1812 004e 6846     		mov	r0, sp
 1813 0050 FFF7FEFF 		bl	Cipher
 1814              	.LVL171:
 551:Src/aes.c     ****       {
 1815              		.loc 1 551 7 view .LVU527
 551:Src/aes.c     ****       {
 1816              		.loc 1 551 15 is_stmt 0 view .LVU528
 1817 0054 0F23     		movs	r3, #15
 1818              	.LVL172:
 1819              	.L101:
 551:Src/aes.c     ****       {
 1820              		.loc 1 551 37 is_stmt 1 discriminator 1 view .LVU529
 551:Src/aes.c     ****       {
 1821              		.loc 1 551 7 is_stmt 0 discriminator 1 view .LVU530
 1822 0056 002B     		cmp	r3, #0
 1823 0058 E2DB     		blt	.L107
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 45


 554:Src/aes.c     ****         {
 1824              		.loc 1 554 9 is_stmt 1 view .LVU531
 554:Src/aes.c     ****         {
 1825              		.loc 1 554 20 is_stmt 0 view .LVU532
 1826 005a 08EB0302 		add	r2, r8, r3
 1827 005e 92F8B020 		ldrb	r2, [r2, #176]	@ zero_extendqisi2
 554:Src/aes.c     ****         {
 1828              		.loc 1 554 12 view .LVU533
 1829 0062 FF2A     		cmp	r2, #255
 1830 0064 D5D0     		beq	.L108
 559:Src/aes.c     ****         break;   
 1831              		.loc 1 559 9 is_stmt 1 view .LVU534
 559:Src/aes.c     ****         break;   
 1832              		.loc 1 559 21 is_stmt 0 view .LVU535
 1833 0066 4344     		add	r3, r3, r8
 1834              	.LVL173:
 559:Src/aes.c     ****         break;   
 1835              		.loc 1 559 21 view .LVU536
 1836 0068 0132     		adds	r2, r2, #1
 1837 006a 83F8B020 		strb	r2, [r3, #176]
 560:Src/aes.c     ****       }
 1838              		.loc 1 560 9 is_stmt 1 view .LVU537
 562:Src/aes.c     ****     }
 1839              		.loc 1 562 10 is_stmt 0 view .LVU538
 1840 006e 0023     		movs	r3, #0
 560:Src/aes.c     ****       }
 1841              		.loc 1 560 9 view .LVU539
 1842 0070 D7E7     		b	.L100
 1843              	.LVL174:
 1844              	.L106:
 566:Src/aes.c     ****   }
 567:Src/aes.c     **** }
 1845              		.loc 1 567 1 view .LVU540
 1846 0072 04B0     		add	sp, sp, #16
 1847              	.LCFI30:
 1848              		.cfi_def_cfa_offset 24
 1849              		@ sp needed
 1850 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1851              		.loc 1 567 1 view .LVU541
 1852              		.cfi_endproc
 1853              	.LFE19:
 1855              		.section	.text.Encrypt,"ax",%progbits
 1856              		.align	1
 1857              		.global	Encrypt
 1858              		.syntax unified
 1859              		.thumb
 1860              		.thumb_func
 1861              		.fpu fpv4-sp-d16
 1863              	Encrypt:
 1864              	.LVL175:
 1865              	.LFB20:
 568:Src/aes.c     **** 
 569:Src/aes.c     **** 
 570:Src/aes.c     **** int Encrypt(unsigned char *in, int in_len, unsigned char *out) 
 571:Src/aes.c     **** {
 1866              		.loc 1 571 1 is_stmt 1 view -0
 1867              		.cfi_startproc
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 46


 1868              		@ args = 0, pretend = 0, frame = 0
 1869              		@ frame_needed = 1, uses_anonymous_args = 0
 1870              		.loc 1 571 1 is_stmt 0 view .LVU543
 1871 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1872              	.LCFI31:
 1873              		.cfi_def_cfa_offset 40
 1874              		.cfi_offset 3, -40
 1875              		.cfi_offset 4, -36
 1876              		.cfi_offset 5, -32
 1877              		.cfi_offset 6, -28
 1878              		.cfi_offset 7, -24
 1879              		.cfi_offset 8, -20
 1880              		.cfi_offset 9, -16
 1881              		.cfi_offset 10, -12
 1882              		.cfi_offset 11, -8
 1883              		.cfi_offset 14, -4
 1884 0004 00AF     		add	r7, sp, #0
 1885              	.LCFI32:
 1886              		.cfi_def_cfa_register 7
 572:Src/aes.c     ****     if ((!in) || (!in_len)) return 0;
 1887              		.loc 1 572 5 is_stmt 1 view .LVU544
 1888              		.loc 1 572 8 is_stmt 0 view .LVU545
 1889 0006 A0B3     		cbz	r0, .L114
 1890 0008 0C46     		mov	r4, r1
 1891 000a 9146     		mov	r9, r2
 1892 000c 8346     		mov	fp, r0
 1893              		.loc 1 572 15 discriminator 2 view .LVU546
 1894 000e 21B9     		cbnz	r1, .L117
 1895              		.loc 1 572 36 view .LVU547
 1896 0010 8846     		mov	r8, r1
 1897              	.LVL176:
 1898              	.L109:
 573:Src/aes.c     ****     int en_len = (in_len / 16 + 1) * 16;
 574:Src/aes.c     ****     int out_len;
 575:Src/aes.c     ****     unsigned char in_buf[en_len];
 576:Src/aes.c     ****     unsigned char place_holder = en_len - in_len;
 577:Src/aes.c     ****     memset(in_buf, place_holder, en_len);
 578:Src/aes.c     ****     memcpy(in_buf, in, in_len);
 579:Src/aes.c     **** 
 580:Src/aes.c     ****     //struct AES_ctx ctx;
 581:Src/aes.c     ****     //memset(&ctx, 0, sizeof(ctx));
 582:Src/aes.c     **** 
 583:Src/aes.c     ****     //AES_init_ctx(&ctx, key);
 584:Src/aes.c     ****     for (int i = 0; i < en_len / 16; ++i) {
 585:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 586:Src/aes.c     ****     }
 587:Src/aes.c     ****     memcpy(out, in_buf, en_len);
 588:Src/aes.c     ****     out_len = en_len;
 589:Src/aes.c     ****     return out_len;
 590:Src/aes.c     **** }
 1899              		.loc 1 590 1 view .LVU548
 1900 0012 4046     		mov	r0, r8
 1901 0014 BD46     		mov	sp, r7
 1902              	.LCFI33:
 1903              		.cfi_remember_state
 1904              		.cfi_def_cfa_register 13
 1905              		@ sp needed
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 47


 1906 0016 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1907              	.LVL177:
 1908              	.L117:
 1909              	.LCFI34:
 1910              		.cfi_restore_state
 573:Src/aes.c     ****     int en_len = (in_len / 16 + 1) * 16;
 1911              		.loc 1 573 5 is_stmt 1 view .LVU549
 573:Src/aes.c     ****     int en_len = (in_len / 16 + 1) * 16;
 1912              		.loc 1 573 26 is_stmt 0 view .LVU550
 1913 001a 0D46     		mov	r5, r1
 1914 001c 0029     		cmp	r1, #0
 1915 001e 17DB     		blt	.L118
 1916              	.L111:
 1917 0020 2D11     		asrs	r5, r5, #4
 573:Src/aes.c     ****     int en_len = (in_len / 16 + 1) * 16;
 1918              		.loc 1 573 31 view .LVU551
 1919 0022 0135     		adds	r5, r5, #1
 573:Src/aes.c     ****     int en_len = (in_len / 16 + 1) * 16;
 1920              		.loc 1 573 9 view .LVU552
 1921 0024 4FEA0518 		lsl	r8, r5, #4
 1922              	.LVL178:
 574:Src/aes.c     ****     unsigned char in_buf[en_len];
 1923              		.loc 1 574 5 is_stmt 1 view .LVU553
 575:Src/aes.c     ****     unsigned char place_holder = en_len - in_len;
 1924              		.loc 1 575 5 view .LVU554
 575:Src/aes.c     ****     unsigned char place_holder = en_len - in_len;
 1925              		.loc 1 575 19 is_stmt 0 view .LVU555
 1926 0028 C246     		mov	r10, r8
 1927 002a ADEB080D 		sub	sp, sp, r8
 1928 002e 6E46     		mov	r6, sp
 1929              	.LVL179:
 576:Src/aes.c     ****     memset(in_buf, place_holder, en_len);
 1930              		.loc 1 576 5 is_stmt 1 view .LVU556
 576:Src/aes.c     ****     memset(in_buf, place_holder, en_len);
 1931              		.loc 1 576 41 is_stmt 0 view .LVU557
 1932 0030 5FFA88F1 		uxtb	r1, r8
 1933              	.LVL180:
 576:Src/aes.c     ****     memset(in_buf, place_holder, en_len);
 1934              		.loc 1 576 41 view .LVU558
 1935 0034 E3B2     		uxtb	r3, r4
 576:Src/aes.c     ****     memset(in_buf, place_holder, en_len);
 1936              		.loc 1 576 19 view .LVU559
 1937 0036 C91A     		subs	r1, r1, r3
 1938              	.LVL181:
 577:Src/aes.c     ****     memcpy(in_buf, in, in_len);
 1939              		.loc 1 577 5 is_stmt 1 view .LVU560
 1940 0038 4246     		mov	r2, r8
 1941              	.LVL182:
 577:Src/aes.c     ****     memcpy(in_buf, in, in_len);
 1942              		.loc 1 577 5 is_stmt 0 view .LVU561
 1943 003a C9B2     		uxtb	r1, r1
 577:Src/aes.c     ****     memcpy(in_buf, in, in_len);
 1944              		.loc 1 577 5 view .LVU562
 1945 003c 6846     		mov	r0, sp
 1946              	.LVL183:
 577:Src/aes.c     ****     memcpy(in_buf, in, in_len);
 1947              		.loc 1 577 5 view .LVU563
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 48


 1948 003e FFF7FEFF 		bl	memset
 1949              	.LVL184:
 578:Src/aes.c     **** 
 1950              		.loc 1 578 5 is_stmt 1 view .LVU564
 1951 0042 2246     		mov	r2, r4
 1952 0044 5946     		mov	r1, fp
 1953 0046 6846     		mov	r0, sp
 1954 0048 FFF7FEFF 		bl	memcpy
 1955              	.LVL185:
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1956              		.loc 1 584 5 view .LVU565
 1957              	.LBB2:
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1958              		.loc 1 584 10 view .LVU566
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1959              		.loc 1 584 14 is_stmt 0 view .LVU567
 1960 004c 0024     		movs	r4, #0
 1961              	.LVL186:
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1962              		.loc 1 584 5 view .LVU568
 1963 004e 08E0     		b	.L112
 1964              	.LVL187:
 1965              	.L118:
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1966              		.loc 1 584 5 view .LVU569
 1967              	.LBE2:
 573:Src/aes.c     ****     int out_len;
 1968              		.loc 1 573 26 view .LVU570
 1969 0050 01F10F05 		add	r5, r1, #15
 1970 0054 E4E7     		b	.L111
 1971              	.LVL188:
 1972              	.L113:
 1973              	.LBB3:
 585:Src/aes.c     ****     }
 1974              		.loc 1 585 9 is_stmt 1 discriminator 3 view .LVU571
 1975 0056 06EB0411 		add	r1, r6, r4, lsl #4
 1976 005a 0748     		ldr	r0, .L119
 1977 005c FFF7FEFF 		bl	AES_ECB_encrypt
 1978              	.LVL189:
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1979              		.loc 1 584 38 discriminator 3 view .LVU572
 1980 0060 0134     		adds	r4, r4, #1
 1981              	.LVL190:
 1982              	.L112:
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1983              		.loc 1 584 21 discriminator 1 view .LVU573
 584:Src/aes.c     ****         AES_ECB_encrypt(&aes_test, &in_buf[i * 16]);
 1984              		.loc 1 584 5 is_stmt 0 discriminator 1 view .LVU574
 1985 0062 A542     		cmp	r5, r4
 1986 0064 F7DC     		bgt	.L113
 1987              	.LBE3:
 587:Src/aes.c     ****     out_len = en_len;
 1988              		.loc 1 587 5 is_stmt 1 view .LVU575
 1989 0066 5246     		mov	r2, r10
 1990 0068 3146     		mov	r1, r6
 1991 006a 4846     		mov	r0, r9
 1992 006c FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 49


 1993              	.LVL191:
 588:Src/aes.c     ****     return out_len;
 1994              		.loc 1 588 5 view .LVU576
 589:Src/aes.c     **** }
 1995              		.loc 1 589 5 view .LVU577
 589:Src/aes.c     **** }
 1996              		.loc 1 589 12 is_stmt 0 view .LVU578
 1997 0070 CFE7     		b	.L109
 1998              	.LVL192:
 1999              	.L114:
 572:Src/aes.c     ****     int en_len = (in_len / 16 + 1) * 16;
 2000              		.loc 1 572 36 view .LVU579
 2001 0072 4FF00008 		mov	r8, #0
 2002 0076 CCE7     		b	.L109
 2003              	.L120:
 2004              		.align	2
 2005              	.L119:
 2006 0078 00000000 		.word	aes_test
 2007              		.cfi_endproc
 2008              	.LFE20:
 2010              		.section	.text.Decrypt,"ax",%progbits
 2011              		.align	1
 2012              		.global	Decrypt
 2013              		.syntax unified
 2014              		.thumb
 2015              		.thumb_func
 2016              		.fpu fpv4-sp-d16
 2018              	Decrypt:
 2019              	.LVL193:
 2020              	.LFB21:
 591:Src/aes.c     **** 
 592:Src/aes.c     **** int Decrypt(unsigned char *in, int in_len, unsigned char *out) 
 593:Src/aes.c     **** {
 2021              		.loc 1 593 1 is_stmt 1 view -0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025              		.loc 1 593 1 is_stmt 0 view .LVU581
 2026 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2027              	.LCFI35:
 2028              		.cfi_def_cfa_offset 24
 2029              		.cfi_offset 3, -24
 2030              		.cfi_offset 4, -20
 2031              		.cfi_offset 5, -16
 2032              		.cfi_offset 6, -12
 2033              		.cfi_offset 7, -8
 2034              		.cfi_offset 14, -4
 594:Src/aes.c     ****     if ((!in) || (!in_len) || (in_len % 16)) return 0;
 2035              		.loc 1 594 5 is_stmt 1 view .LVU582
 2036              		.loc 1 594 8 is_stmt 0 view .LVU583
 2037 0002 28B3     		cbz	r0, .L127
 2038 0004 0C46     		mov	r4, r1
 2039 0006 1746     		mov	r7, r2
 2040 0008 0646     		mov	r6, r0
 2041              		.loc 1 594 15 discriminator 2 view .LVU584
 2042 000a F9B1     		cbz	r1, .L121
 2043              		.loc 1 594 28 discriminator 4 view .LVU585
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 50


 2044 000c 11F00F0F 		tst	r1, #15
 2045 0010 20D1     		bne	.L129
 2046              	.LBB4:
 595:Src/aes.c     ****     int out_len;
 596:Src/aes.c     ****     //struct AES_ctx ctx;
 597:Src/aes.c     ****     //AES_init_ctx(&ctx, key);
 598:Src/aes.c     ****     for (int i = 0; i < in_len / 16; ++i) {
 2047              		.loc 1 598 14 view .LVU586
 2048 0012 0025     		movs	r5, #0
 2049 0014 08E0     		b	.L123
 2050              	.LVL194:
 2051              	.L124:
 2052              		.loc 1 598 5 discriminator 1 view .LVU587
 2053 0016 B5EB231F 		cmp	r5, r3, asr #4
 2054 001a 0BDA     		bge	.L132
 599:Src/aes.c     ****         AES_ECB_decrypt(&aes_test, &in[i * 16]);
 2055              		.loc 1 599 9 is_stmt 1 discriminator 3 view .LVU588
 2056 001c 06EB0511 		add	r1, r6, r5, lsl #4
 2057 0020 0E48     		ldr	r0, .L133
 2058 0022 FFF7FEFF 		bl	AES_ECB_decrypt
 2059              	.LVL195:
 598:Src/aes.c     ****         AES_ECB_decrypt(&aes_test, &in[i * 16]);
 2060              		.loc 1 598 38 discriminator 3 view .LVU589
 2061 0026 0135     		adds	r5, r5, #1
 2062              	.LVL196:
 2063              	.L123:
 598:Src/aes.c     ****         AES_ECB_decrypt(&aes_test, &in[i * 16]);
 2064              		.loc 1 598 21 discriminator 1 view .LVU590
 598:Src/aes.c     ****         AES_ECB_decrypt(&aes_test, &in[i * 16]);
 2065              		.loc 1 598 32 is_stmt 0 discriminator 1 view .LVU591
 2066 0028 2346     		mov	r3, r4
 2067 002a 002C     		cmp	r4, #0
 2068 002c F3DA     		bge	.L124
 2069              	.LVL197:
 598:Src/aes.c     ****         AES_ECB_decrypt(&aes_test, &in[i * 16]);
 2070              		.loc 1 598 32 discriminator 1 view .LVU592
 2071 002e 04F10F03 		add	r3, r4, #15
 2072              	.LVL198:
 598:Src/aes.c     ****         AES_ECB_decrypt(&aes_test, &in[i * 16]);
 2073              		.loc 1 598 32 discriminator 1 view .LVU593
 2074 0032 F0E7     		b	.L124
 2075              	.L132:
 598:Src/aes.c     ****         AES_ECB_decrypt(&aes_test, &in[i * 16]);
 2076              		.loc 1 598 32 discriminator 1 view .LVU594
 2077              	.LBE4:
 600:Src/aes.c     ****     }
 601:Src/aes.c     ****     unsigned char _last = in[in_len - 1];
 2078              		.loc 1 601 5 is_stmt 1 view .LVU595
 2079              		.loc 1 601 29 is_stmt 0 view .LVU596
 2080 0034 631E     		subs	r3, r4, #1
 2081              		.loc 1 601 19 view .LVU597
 2082 0036 F15C     		ldrb	r1, [r6, r3]	@ zero_extendqisi2
 2083              	.LVL199:
 602:Src/aes.c     ****     if (_last > 0x0f) {
 2084              		.loc 1 602 5 is_stmt 1 view .LVU598
 2085              		.loc 1 602 8 is_stmt 0 view .LVU599
 2086 0038 0F29     		cmp	r1, #15
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 51


 2087 003a 01D9     		bls	.L126
 603:Src/aes.c     ****        if(in_len <= 16)
 2088              		.loc 1 603 8 is_stmt 1 view .LVU600
 2089              		.loc 1 603 10 is_stmt 0 view .LVU601
 2090 003c 102C     		cmp	r4, #16
 2091 003e 0BDD     		ble	.L130
 2092              	.L126:
 604:Src/aes.c     ****        {
 605:Src/aes.c     ****         _last = 0x0f;
 606:Src/aes.c     ****         return 0;
 607:Src/aes.c     ****        }
 608:Src/aes.c     ****     }
 609:Src/aes.c     ****     out_len = in_len - _last;
 2093              		.loc 1 609 5 is_stmt 1 view .LVU602
 2094              		.loc 1 609 13 is_stmt 0 view .LVU603
 2095 0040 641A     		subs	r4, r4, r1
 2096              	.LVL200:
 610:Src/aes.c     ****     memcpy(out, in, out_len);
 2097              		.loc 1 610 5 is_stmt 1 view .LVU604
 2098 0042 2246     		mov	r2, r4
 2099 0044 3146     		mov	r1, r6
 2100              	.LVL201:
 2101              		.loc 1 610 5 is_stmt 0 view .LVU605
 2102 0046 3846     		mov	r0, r7
 2103 0048 FFF7FEFF 		bl	memcpy
 2104              	.LVL202:
 611:Src/aes.c     ****     return out_len;
 2105              		.loc 1 611 5 is_stmt 1 view .LVU606
 2106              	.L121:
 612:Src/aes.c     **** }
 2107              		.loc 1 612 1 is_stmt 0 view .LVU607
 2108 004c 2046     		mov	r0, r4
 2109 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2110              	.LVL203:
 2111              	.L127:
 594:Src/aes.c     ****     int out_len;
 2112              		.loc 1 594 53 view .LVU608
 2113 0050 0024     		movs	r4, #0
 2114 0052 FBE7     		b	.L121
 2115              	.L129:
 594:Src/aes.c     ****     int out_len;
 2116              		.loc 1 594 53 view .LVU609
 2117 0054 0024     		movs	r4, #0
 2118 0056 F9E7     		b	.L121
 2119              	.LVL204:
 2120              	.L130:
 606:Src/aes.c     ****        }
 2121              		.loc 1 606 16 view .LVU610
 2122 0058 0024     		movs	r4, #0
 2123              	.LVL205:
 606:Src/aes.c     ****        }
 2124              		.loc 1 606 16 view .LVU611
 2125 005a F7E7     		b	.L121
 2126              	.L134:
 2127              		.align	2
 2128              	.L133:
 2129 005c 00000000 		.word	aes_test
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 52


 2130              		.cfi_endproc
 2131              	.LFE21:
 2133              		.comm	aes_test,192,4
 2134              		.section	.rodata.Rcon,"a"
 2135              		.align	2
 2136              		.set	.LANCHOR1,. + 0
 2139              	Rcon:
 2140 0000 8D010204 		.ascii	"\215\001\002\004\010\020 @\200\0336"
 2140      08102040 
 2140      801B36
 2141              		.section	.rodata.rsbox,"a"
 2142              		.align	2
 2143              		.set	.LANCHOR2,. + 0
 2146              	rsbox:
 2147 0000 52096AD5 		.ascii	"R\011j\32506\2458\277@\243\236\201\363\327\373|\343"
 2147      3036A538 
 2147      BF40A39E 
 2147      81F3D7FB 
 2147      7CE3
 2148 0012 39829B2F 		.ascii	"9\202\233/\377\2074\216CD\304\336\351\313T{\2242\246"
 2148      FF87348E 
 2148      4344C4DE 
 2148      E9CB547B 
 2148      9432A6
 2149 0025 C2233DEE 		.ascii	"\302#=\356L\225\013B\372\303N\010.\241f(\331$\262v["
 2149      4C950B42 
 2149      FAC34E08 
 2149      2EA16628 
 2149      D924B276 
 2150 003a A2496D8B 		.ascii	"\242Im\213\321%r\370\366d\206h\230\026\324\244\\\314"
 2150      D12572F8 
 2150      F6648668 
 2150      9816D4A4 
 2150      5CCC
 2151 004c 5D65B692 		.ascii	"]e\266\222lpHP\375\355\271\332^\025FW\247\215\235\204"
 2151      6C704850 
 2151      FDEDB9DA 
 2151      5E154657 
 2151      A78D9D84 
 2152 0060 90D8AB00 		.ascii	"\220\330\253\000\214\274\323\012\367\344X\005\270\263"
 2152      8CBCD30A 
 2152      F7E45805 
 2152      B8B3
 2153 006e 4506D02C 		.ascii	"E\006\320,\036\217\312?\017\002\301\257\275\003\001"
 2153      1E8FCA3F 
 2153      0F02C1AF 
 2153      BD0301
 2154 007d 138A6B3A 		.ascii	"\023\212k:\221\021AOg\334\352\227\362\317\316\360\264"
 2154      9111414F 
 2154      67DCEA97 
 2154      F2CFCEF0 
 2154      B4
 2155 008e E67396AC 		.ascii	"\346s\226\254t\"\347\2555\205\342\3717\350\034u\337"
 2155      7422E7AD 
 2155      3585E2F9 
 2155      37E81C75 
 2155      DF
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 53


 2156 009f 6E47F11A 		.ascii	"nG\361\032q\035)\305\211o\267b\016\252\030\276\033\374"
 2156      711D29C5 
 2156      896FB762 
 2156      0EAA18BE 
 2156      1BFC
 2157 00b1 563E4BC6 		.ascii	"V>K\306\322y \232\333\300\376x\315Z\364\037\335\250"
 2157      D279209A 
 2157      DBC0FE78 
 2157      CD5AF41F 
 2157      DDA8
 2158 00c3 338807C7 		.ascii	"3\210\007\3071\261\022\020Y'\200\354_`Q\177\251\031"
 2158      31B11210 
 2158      592780EC 
 2158      5F60517F 
 2158      A919
 2159 00d5 B54A0D2D 		.ascii	"\265J\015-\345z\237\223\311\234\357\240\340;M\256*\365"
 2159      E57A9F93 
 2159      C99CEFA0 
 2159      E03B4DAE 
 2159      2AF5
 2160 00e7 B0C8EBBB 		.ascii	"\260\310\353\273<\203S\231a\027+\004~\272w\326&\341"
 2160      3C835399 
 2160      61172B04 
 2160      7EBA77D6 
 2160      26E1
 2161 00f9 69146355 		.ascii	"i\024cU!\014}"
 2161      210C7D
 2162              		.section	.rodata.sbox,"a"
 2163              		.align	2
 2164              		.set	.LANCHOR0,. + 0
 2167              	sbox:
 2168 0000 637C777B 		.ascii	"c|w{\362ko\3050\001g+\376\327\253v\312\202\311}\372"
 2168      F26B6FC5 
 2168      3001672B 
 2168      FED7AB76 
 2168      CA82C97D 
 2169 0015 5947F0AD 		.ascii	"YG\360\255\324\242\257\234\244r\300\267\375\223&6?\367"
 2169      D4A2AF9C 
 2169      A472C0B7 
 2169      FD932636 
 2169      3FF7
 2170 0027 CC34A5E5 		.ascii	"\3144\245\345\361q\3301\025\004\307#\303\030\226\005"
 2170      F171D831 
 2170      1504C723 
 2170      C3189605 
 2171 0037 9A071280 		.ascii	"\232\007\022\200\342\353'\262u\011\203,\032\033nZ\240"
 2171      E2EB27B2 
 2171      7509832C 
 2171      1A1B6E5A 
 2171      A0
 2172 0048 523BD6B3 		.ascii	"R;\326\263)\343/\204S\321\000\355 \374\261[j\313\276"
 2172      29E32F84 
 2172      53D100ED 
 2172      20FCB15B 
 2172      6ACBBE
 2173 005b 394A4C58 		.ascii	"9JLX\317\320\357\252\373CM3\205E\371\002\177P<\237\250"
 2173      CFD0EFAA 
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 54


 2173      FB434D33 
 2173      8545F902 
 2173      7F503C9F 
 2174 0070 51A3408F 		.ascii	"Q\243@\217\222\2358\365\274\266\332!\020\377\363\322"
 2174      929D38F5 
 2174      BCB6DA21 
 2174      10FFF3D2 
 2175 0080 CD0C13EC 		.ascii	"\315\014\023\354_\227D\027\304\247~=d]\031s`\201O\334"
 2175      5F974417 
 2175      C4A77E3D 
 2175      645D1973 
 2175      60814FDC 
 2176 0094 222A9088 		.ascii	"\"*\220\210F\356\270\024\336^\013\333\3402:\012I\006"
 2176      46EEB814 
 2176      DE5E0BDB 
 2176      E0323A0A 
 2176      4906
 2177 00a6 245CC2D3 		.ascii	"$\\\302\323\254b\221\225\344y\347\3107m\215\325N\251"
 2177      AC629195 
 2177      E479E7C8 
 2177      376D8DD5 
 2177      4EA9
 2178 00b8 6C56F4EA 		.ascii	"lV\364\352ez\256\010\272x%.\034\246\264\306\350\335"
 2178      657AAE08 
 2178      BA78252E 
 2178      1CA6B4C6 
 2178      E8DD
 2179 00ca 741F4BBD 		.ascii	"t\037K\275\213\212p>\265fH\003\366\016a5W\271\206\301"
 2179      8B8A703E 
 2179      B5664803 
 2179      F60E6135 
 2179      57B986C1 
 2180 00de 1D9EE1F8 		.ascii	"\035\236\341\370\230\021i\331\216\224\233\036\207\351"
 2180      981169D9 
 2180      8E949B1E 
 2180      87E9
 2181 00ec CE5528DF 		.ascii	"\316U(\337\214\241\211\015\277\346BhA\231-\017\260T"
 2181      8CA1890D 
 2181      BFE64268 
 2181      41992D0F 
 2181      B054
 2182 00fe BB16     		.ascii	"\273\026"
 2183              		.text
 2184              	.Letext0:
 2185              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 2186              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 2187              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 2188              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 2189              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 2190              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 2191              		.file 8 "Inc/aes.h"
 2192              		.file 9 "<built-in>"
 2193              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 aes.c
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:18     .text.KeyExpansion:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:25     .text.KeyExpansion:00000000 KeyExpansion
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:237    .text.KeyExpansion:000000c0 $d
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:243    .text.AddRoundKey:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:249    .text.AddRoundKey:00000000 AddRoundKey
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:327    .text.SubBytes:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:333    .text.SubBytes:00000000 SubBytes
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:424    .text.SubBytes:0000003c $d
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:429    .text.ShiftRows:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:435    .text.ShiftRows:00000000 ShiftRows
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:518    .text.xtime:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:524    .text.xtime:00000000 xtime
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:547    .text.MixColumns:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:553    .text.MixColumns:00000000 MixColumns
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:685    .text.InvMixColumns:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:691    .text.InvMixColumns:00000000 InvMixColumns
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:942    .text.InvSubBytes:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:948    .text.InvSubBytes:00000000 InvSubBytes
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1039   .text.InvSubBytes:0000003c $d
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1044   .text.InvShiftRows:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1050   .text.InvShiftRows:00000000 InvShiftRows
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1133   .text.Cipher:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1139   .text.Cipher:00000000 Cipher
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1217   .text.InvCipher:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1223   .text.InvCipher:00000000 InvCipher
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1295   .text.XorWithIv:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1301   .text.XorWithIv:00000000 XorWithIv
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1354   .text.AES_init_ctx:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1361   .text.AES_init_ctx:00000000 AES_init_ctx
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1383   .text.AES_init_ctx_iv:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1390   .text.AES_init_ctx_iv:00000000 AES_init_ctx_iv
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1426   .text.AES_ctx_set_iv:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1433   .text.AES_ctx_set_iv:00000000 AES_ctx_set_iv
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1467   .text.AES_ECB_encrypt:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1474   .text.AES_ECB_encrypt:00000000 AES_ECB_encrypt
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1503   .text.AES_ECB_decrypt:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1510   .text.AES_ECB_decrypt:00000000 AES_ECB_decrypt
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1539   .text.AES_CBC_encrypt_buffer:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1546   .text.AES_CBC_encrypt_buffer:00000000 AES_CBC_encrypt_buffer
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1624   .text.AES_CBC_decrypt_buffer:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1631   .text.AES_CBC_decrypt_buffer:00000000 AES_CBC_decrypt_buffer
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1716   .text.AES_CTR_xcrypt_buffer:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1723   .text.AES_CTR_xcrypt_buffer:00000000 AES_CTR_xcrypt_buffer
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1856   .text.Encrypt:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:1863   .text.Encrypt:00000000 Encrypt
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2006   .text.Encrypt:00000078 $d
                            *COM*:000000c0 aes_test
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2011   .text.Decrypt:00000000 $t
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2018   .text.Decrypt:00000000 Decrypt
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2129   .text.Decrypt:0000005c $d
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2135   .rodata.Rcon:00000000 $d
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2139   .rodata.Rcon:00000000 Rcon
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2142   .rodata.rsbox:00000000 $d
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2146   .rodata.rsbox:00000000 rsbox
C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2163   .rodata.sbox:00000000 $d
ARM GAS  C:\Users\123\AppData\Local\Temp\cc2jtB9T.s 			page 56


C:\Users\123\AppData\Local\Temp\cc2jtB9T.s:2167   .rodata.sbox:00000000 sbox

UNDEFINED SYMBOLS
memset
memcpy
